{"version":3,"file":"debug-area-view.js","sourceRoot":"","sources":["../../src/debug-area/debug-area-view.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel';\n/*!\n * Atom Bugs\n * Copyright(c) 2017 Williams Medina <williams.medinaa@gmail.com>\n * MIT Licensed\n */\n\nimport {\n  createGroupButtons,\n  createButton,\n  createIcon,\n  createIconFromPath,\n  createText,\n  createElement,\n  insertElement,\n  attachEventFromObject\n} from '../element/index';\nimport { InspectorView } from '../inspector/index';\nimport { EventEmitter }  from 'events';\nimport { parse } from 'path';\n\nexport interface CallStackFrame {\n  name: string,\n  columnNumber: number,\n  lineNumber: number,\n  filePath: string\n}\n\nexport type CallStackFrames = Array<CallStackFrame>;\n\nexport interface DebugAreaOptions {\n  didPause?: Function,\n  didResume?: Function,\n  didStepOver?: Function,\n  didStepInto?: Function,\n  didStepOut?: Function,\n  didBreak?: Function,\n  didOpenFile?: Function,\n  didRequestProperties?: Function\n}\n\nexport class DebugAreaView {\n\n  private consoleElement: HTMLElement;\n  private debugAreaElement: HTMLElement;\n  private callStackContentElement: HTMLElement;\n  private scopeContentElement: HTMLElement;\n  private breakpointContentElement: HTMLElement;\n\n  private pauseButton: HTMLElement;\n  private resumeButton: HTMLElement;\n  private events: EventEmitter;\n\n  constructor (options?: DebugAreaOptions) {\n\n    this.events = new EventEmitter();\n    this.consoleElement = createElement('atom-bugs-console');\n    this.consoleElement.setAttribute('tabindex', '-1');\n\n    this.pauseButton = createButton({\n      click: () => {\n        this.events.emit('didPause')\n      }\n    }, [createIcon('pause'), createText('Pause')]);\n\n    this.resumeButton = createButton({\n      click: () => {\n        this.events.emit('didResume')\n      }\n    }, [createIcon('resume'), createText('Resume')])\n\n    this.togglePause(false);\n\n    this.debugAreaElement = createElement('atom-bugs-area');\n    this.callStackContentElement = createElement('atom-bugs-group-content', {\n      className: 'callstack'\n    });\n    this.scopeContentElement = createElement('atom-bugs-group-content', {\n      className: 'scope'\n    });\n    this.breakpointContentElement = createElement('atom-bugs-group-content', {\n      className: 'breakpoint'\n    });\n\n    insertElement(this.debugAreaElement, [\n      createElement('atom-bugs-controls', {\n        elements: [\n          this.pauseButton,\n          this.resumeButton,\n          createButton({\n            click: () => {\n              this.events.emit('didStepOver')\n            }\n          }, [createIcon('step-over')]),\n          createButton({\n            click: () => {\n              this.events.emit('didStepInto')\n            }\n          }, [createIcon('step-into')]),\n          createButton({\n            click: () => {\n              this.events.emit('didStepOut')\n            }\n          }, [createIcon('step-out')])\n        ]\n      }),\n      createElement('atom-bugs-group', {\n        elements: [\n          createElement('atom-bugs-group-header', {\n            elements: [createText('Call Stack')]\n          }),\n          this.callStackContentElement\n        ]\n      }),\n      createElement('atom-bugs-group', {\n        elements: [\n          createElement('atom-bugs-group-header', {\n            elements: [createText('Scope')]\n          }),\n          this.scopeContentElement\n        ]\n      }),\n      createElement('atom-bugs-group', {\n        elements: [\n          createElement('atom-bugs-group-header', {\n            elements: [createText('Breakpoints')]\n          }),\n          this.breakpointContentElement\n        ]\n      })\n    ])\n    attachEventFromObject(this.events, [\n      'didPause',\n      'didResume',\n      'didStepOver',\n      'didStepInto',\n      'didStepOut',\n      'didBreak',\n      'didOpenFile',\n      'didRequestProperties'\n    ], options);\n  }\n\n  togglePause (status: boolean) {\n    this.resumeButton.style.display = status ? null : 'none';\n    this.pauseButton.style.display = status ? 'none' : null;\n  }\n\n  // setPausedScript (filePath: string, lineNumber: number) {\n  //   this.consoleCreateLine('', [\n  //     createText('Pause on'),\n  //     createText(`${filePath}:${lineNumber}`)\n  //   ])\n  // }\n\n  // Debug\n  createFrameLine (frame: CallStackFrame, indicate: boolean) {\n    let file = parse(frame.filePath);\n    let indicator = createIcon(indicate ? 'arrow-right-solid' : '');\n    if (indicate) {\n      indicator.classList.add('active');\n    }\n    return createElement('atom-bugs-group-item', {\n      options: {\n        click: () => {\n          this.events.emit('didOpenFile',\n            frame.filePath,\n            frame.lineNumber,\n            frame.columnNumber);\n        }\n      },\n      elements: [\n        createElement('span', {\n          elements: [indicator, createText(frame.name || '(anonymous)')]\n        }),\n        createElement('span', {\n          className: 'file-reference',\n          elements: [\n            createText(file.base),\n            createElement('span', {\n              className: 'file-position',\n              elements: [ createText(`${frame.lineNumber}${ frame.columnNumber > 0 ? ':' + frame.columnNumber : '' }`) ]\n            })\n          ]\n        })\n      ]\n    });\n  }\n\n  getBreakpointId (filePath: string, lineNumber: number) {\n    let token = btoa(`${filePath}${lineNumber}`);\n    return `breakpoint-${token}`;\n  }\n\n  createBreakpointLine (filePath: string, lineNumber: number) {\n    let file = parse(filePath);\n    insertElement(this.breakpointContentElement, createElement('atom-bugs-group-item', {\n      id: this.getBreakpointId(filePath, lineNumber),\n      elements: [\n        createIcon('break'),\n        createElement('span', {\n          className: 'file-reference',\n          elements: [\n            createText(file.base),\n            createElement('span', {\n              className: 'file-position',\n              elements: [ createText(String(lineNumber)) ]\n            })\n          ]\n        })\n      ]\n    }))\n  }\n\n  removeBreakpointLine (filePath: string, lineNumber: number) {\n    let id = this.getBreakpointId(filePath, lineNumber);\n    let element = this.breakpointContentElement.querySelector(`[id='${id}']`)\n    if (element) {\n      element.remove();\n    }\n  }\n\n  clearBreakpoints () {\n    this.breakpointContentElement.innerHTML = '';\n  }\n\n  insertCallStackFromFrames (frames: CallStackFrames) {\n    this.clearCallStack();\n    frames.forEach((frame, index) => {\n      return insertElement(this.callStackContentElement,\n        this.createFrameLine(frame, index === 0))\n    })\n  }\n\n  clearCallStack () {\n    this.callStackContentElement.innerHTML = '';\n  }\n\n  insertScope (scope) {\n    this.clearScope();\n    let inspector = new InspectorView({\n      result: scope,\n      didRequestProperties: (result, inspectorView) => {\n        this.events.emit('didRequestProperties', result, inspectorView);\n      }\n    });\n    insertElement(this.scopeContentElement, inspector.getElement());\n  }\n\n  clearScope () {\n    this.scopeContentElement.innerHTML = '';\n  }\n\n  getDebugElement () {\n    return this.debugAreaElement;\n  }\n  // Console\n  clearConsole () {\n    this.consoleElement.innerHTML = '';\n  }\n\n  createConsoleLine (entry: string, elements?) {\n    let line = createElement('atom-bugs-console-line');\n    if (entry && entry.length > 0) {\n      line.innerHTML = entry;\n    }\n    if (elements) {\n      insertElement(line, elements)\n    }\n    setTimeout (() => {\n      this.consoleElement.scrollTop = this.consoleElement.scrollHeight;\n    }, 250);\n    return insertElement(this.consoleElement, line);\n  }\n\n  getConsoleElement () {\n    return this.consoleElement;\n  }\n\n  // Destroy all\n  destroy () {\n    this.consoleElement.remove();\n    this.debugAreaElement.remove();\n  }\n}\n"]}