{"version":3,"file":"BreakpointNavigatorView.js","sourceRoot":"","sources":["../../src2/breakpoint/BreakpointNavigatorView.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel';\n/*!\n * XAtom Debug\n * Copyright(c) 2017 Williams Medina <williams.medinaa@gmail.com>\n * MIT Licensed\n */\n\nconst { CompositeDisposable, Disposable } = require('atom');\nimport { XAtom } from '../XAtom';\nimport { View, ViewElement } from '../View';\nimport { Project } from '../Project';\nimport { GroupView } from '../GroupView';\nimport { Breakpoint } from './Breakpoint';\nimport { BreakpointView } from './BreakpointView';\n\nexport const BREAKPOINT_NAVIGATOR_URI = 'xatom://breakpoint-navigator';\n\n@View({\n  name: 'xatom-breakpoint-navigator'\n})\nexport class BreakpointNavigatorView {\n  public element: HTMLElement;\n  private subscriptions: any;\n  private breakpointGroupView: GroupView;\n  constructor (private viewElement: ViewElement) {\n    this.breakpointGroupView = new GroupView(null, {\n      title: '&nbsp;',\n      actions: {\n        'Remove All': () => this.removeAll()\n      }\n    });\n    this.element = this.getElement();\n    this.element.appendChild(this.breakpointGroupView.getElement());\n    this.setCurrentBreakpoints();\n    this.subscriptions = new CompositeDisposable(\n      XAtom.project.onDidChange(() => this.setCurrentBreakpoints()),\n      XAtom.breakpoints.onDidAdd((b: Breakpoint) => this.addBreakpoint(b)),\n      XAtom.breakpoints.onDidRemove((b: Breakpoint) => this.removeBreakpoint(b))\n    );\n  }\n  addBreakpoint (breakpoint: Breakpoint) {\n    const item = new BreakpointView(null, breakpoint);\n    this.breakpointGroupView.addItem(item.getElement(), {\n      filePath: breakpoint.filePath,\n      lineNumber: breakpoint.lineNumber\n    });\n  }\n  removeBreakpoint (breakpoint: Breakpoint) {\n    this.breakpointGroupView.removeItem({\n      filePath: breakpoint.filePath,\n      lineNumber: breakpoint.lineNumber\n    });\n  }\n  async removeAll () {\n    const breakpoints = await XAtom.breakpoints.get();\n    breakpoints.forEach((b) => XAtom.breakpoints.remove(b.filePath, b.lineNumber));\n  }\n  async setCurrentBreakpoints () {\n    this.breakpointGroupView.removeItems();\n    const breakpoints = await XAtom.breakpoints.get();\n    breakpoints.forEach((b) => this.addBreakpoint(b));\n  }\n  getElement () {\n    return this.viewElement.element;\n  }\n  getTitle () {\n    return 'Breakpoints';\n  }\n  getURI () {\n    return BREAKPOINT_NAVIGATOR_URI;\n  }\n  serialize() {\n    return {\n      deserializer: 'XAtom/BreakpointNavigatorView'\n    };\n  }\n  getDefaultLocation () {\n    return 'right';\n  }\n  getAllowedLocations () {\n    return ['right', 'center', 'left'];\n  }\n  destroy () {\n    atom.workspace.hide(BREAKPOINT_NAVIGATOR_URI);\n    this.viewElement.element.remove();\n    this.subscriptions.dispose();\n  }\n}\n"]}