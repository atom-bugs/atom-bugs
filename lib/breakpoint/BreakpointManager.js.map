{"version":3,"file":"BreakpointManager.js","sourceRoot":"","sources":["../../src2/breakpoint/BreakpointManager.ts"],"names":[],"mappings":"AAAA,WAAW,CAAC;;;;;;;;;AACZ;;;;GAIG;AACH,OAAO,EAAE,KAAK,EAAE,MAAM,UAAU,CAAC;AACjC,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AAIrC,MAAM,EACJ,mBAAmB,EACnB,OAAO,EACP,KAAK,EACL,UAAU,EACX,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAEpB,MAAM;IAMJ;QALQ,YAAO,GAAG,IAAI,OAAO,EAAE,CAAC;QAIxB,YAAO,GAAG,IAAI,mBAAmB,EAAE,CAAC;QAE1C,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;YACzB,MAAM,OAAO,GAAkB,CAAC,CAAC,MAAO,CAAC;YACzC,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;gBAC9C,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;gBAC9C,MAAM,UAAU,GAAG,QAAQ,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;gBACxD,IAAI;qBACD,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC;qBAC1B,IAAI,CAAC,CAAC,UAAU;oBACf,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;wBACf,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;oBACpC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAA;oBAChC,CAAC;gBACH,CAAC,CAAC,CAAC;YACP,CAAC;QACH,CAAC,CAAC;IACJ,CAAC;IACD,GAAG;QACD,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;QAC1C,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACZ,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC;gBAC7B,SAAS,EAAE,OAAO,CAAC,GAAG;aACvB,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC7B,CAAC;IACH,CAAC;IACD,OAAO;QACL,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;QAC1C,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,OAAO,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,OAAO;iBACX,UAAU;iBACV,IAAI,CAAC;gBACJ,SAAS,EAAE,OAAO,CAAC,GAAG;gBACtB,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE;aACvC,CAAC;iBACD,IAAI,CAAC,CAAC,WAAW;gBAChB,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;oBACpB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC;gBACtD,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;IACH,CAAC;IACD,oBAAoB,CAAE,MAAM;QAC1B,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;YACjC,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC;YACpC,MAAM,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,aAAa,CAAC,CAAC;YACjE,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACf,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YAC9B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,6BAA6B,CAAC,CAAC;YACxC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACK,YAAY,CAAE,MAAW;;YAC7B,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,IAAI,CAAC,OAAO,GAAG,IAAI,mBAAmB,EAAE,CAAC;YACzC,IAAI,CAAC,WAAW,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;YAC3D,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;YAC5B,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;YACnE,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;KAAA;IACD,aAAa;QACX,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QACvB,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACxE,CAAC;IACH,CAAC;IACD,MAAM,CAAC,uBAAuB,CAAE,UAAkB;QAChD,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC;QAC1D,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,iBAAiB,EAAE,CAAC;QAC9D,MAAM,CAAC,MAAM;aACZ,wBAAwB,CAAC;YACxB,KAAK,EAAE,kBAAkB;SAC1B,CAAC;aACD,IAAI,CAAC,CAAC,CAAC;YACN,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,cAAc,EAAE,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACL,CAAC;IACD,GAAG,CAAE,QAAgB,EAAE,UAAkB;QACvC,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;QAC1C,MAAM,CAAC,OAAO;aACX,UAAU;aACV,MAAM,CAAC;YACN,SAAS,EAAE,OAAO,CAAC,GAAG;YACtB,SAAS,EAAE,EAAE;YACb,QAAQ;YACR,UAAU;YACV,YAAY,EAAE,CAAC;SAChB,CAAC;aACD,IAAI,CAAC,CAAC,MAAM;YACX,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,KAAK,QAAQ,CAAC,CAAC,CAAC;gBACpE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;gBAClD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YACtC,CAAC;YACD,MAAM,CAAC,MAAM,CAAC;QAChB,CAAC,CAAC,CAAC;IACP,CAAC;IACD,MAAM,CAAE,QAAgB,EAAE,UAAkB;QAC1C,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;QAC1C,MAAM,cAAc,GAAe;YACjC,QAAQ;YACR,UAAU;YACV,YAAY,EAAE,CAAC;YACf,SAAS,EAAE,EAAE;SACd,CAAC;QACF,MAAM,CAAC,OAAO;aACX,UAAU;aACV,MAAM,CAAC;YACN,SAAS,EAAE,OAAO,CAAC,GAAG;YACtB,QAAQ;YACR,UAAU;SACX,CAAC;aACD,IAAI,CAAC;YACJ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;YAC/C,MAAM,aAAa,GAAG,iBAAiB,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC;YAC5E,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBAClB,aAAa,CAAC,OAAO,EAAE,CAAC;YAC1B,CAAC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IACD,IAAI,CAAE,QAAgB,EAAE,UAAkB;QACxC,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;QAC1C,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC;YAChC,SAAS,EAAE,OAAO,CAAC,GAAG;YACtB,QAAQ;YACR,UAAU;SACX,CAAC,CAAC;IACL,CAAC;IACD,YAAY,CAAE,MAAW,EAAE,UAAkB;QAC3C,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC;QACxD,IAAI,MAAM,GAAG,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAC3C,IAAI,SAAS,GAAG,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE;YAC5C,IAAI,EAAE,aAAa;YACnB,KAAK,EAAE,kBAAkB;SAC1B,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,UAAU,CAAC,MAAM,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IAC3D,CAAC;IACD,QAAQ,CAAE,EAAE;QACV,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IACvC,CAAC;IACD,WAAW,CAAE,EAAE;QACb,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;IAC1C,CAAC;IACD,OAAO;QACL,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;CACF","sourcesContent":["'use babel';\n/*!\n * XAtom Debug\n * Copyright(c) 2017 Williams Medina <williams.medinaa@gmail.com>\n * MIT Licensed\n */\nimport { XAtom } from '../XAtom';\nimport { Storage } from '../storage';\nimport { Project } from '../Project';\nimport { Breakpoint, Breakpoints } from './Breakpoint';\n\nconst {\n  CompositeDisposable,\n  Emitter,\n  Range,\n  Disposable\n} = require('atom');\n\nexport class BreakpointManager {\n  private emitter = new Emitter();\n  private lineNumbers: HTMLElement;\n  private currentEditor: any;\n  private lineEventListener: EventListenerOrEventListenerObject;\n  private markers = new CompositeDisposable();\n  constructor () {\n    this.lineEventListener = (e) => {\n      const element = (<HTMLElement> e.target);\n      if (element.classList.contains('line-number')) {\n        const filePath = this.currentEditor.getPath();\n        const lineNumber = parseInt(element.textContent, 0) - 1;\n        this\n          .find(filePath, lineNumber)\n          .then((breakpoint) => {\n            if (breakpoint) {\n              this.remove(filePath, lineNumber);\n            } else {\n              this.add(filePath, lineNumber)\n            }\n          });\n      }\n    };\n  }\n  get (): Promise<Breakpoints> {\n    const project = XAtom.project.getActive();\n    if (project) {\n      return Storage.breakpoint.find({\n        projectId: project._id\n      });\n    } else {\n      return Promise.resolve([]);\n    }\n  }\n  restore () {\n    const project = XAtom.project.getActive();\n    if (this.currentEditor && project) {\n      return Storage\n        .breakpoint\n        .find({\n          projectId: project._id,\n          filePath: this.currentEditor.getPath()\n        })\n        .then((breakpoints) => {\n          breakpoints.forEach((b) => {\n            this.createMarker(this.currentEditor, b.lineNumber);\n          });\n        });\n    }\n  }\n  getEditorLineNumbers (editor): Promise<HTMLElement> {\n    return new Promise((resolve, reject) => {\n      const gutters = editor.getGutters();\n      const lineGutter = gutters.find((g) => g.name === 'line-number');\n      if (lineGutter) {\n        resolve(lineGutter.element);\n      } else {\n        reject('Unable to find line numbers');\n      }\n    });\n  }\n  async attachEditor (editor: any) {\n    this.dettachEditor();\n    this.markers = new CompositeDisposable();\n    this.lineNumbers = await this.getEditorLineNumbers(editor);\n    this.currentEditor = editor;\n    this.lineNumbers.addEventListener('click', this.lineEventListener);\n    this.restore();\n  }\n  dettachEditor () {\n    this.markers.dispose();\n    if (this.currentEditor && this.lineNumbers) {\n      this.lineNumbers.removeEventListener('click', this.lineEventListener);\n    }\n  }\n  static getMarkerFromLineNumber (lineNumber: number) {\n    const range = new Range([lineNumber, 0], [lineNumber, 0]);\n    const editor = atom.workspace.getCenter().getActivePaneItem();\n    return editor\n    .getLineNumberDecorations({\n      class: 'xatom-breakpoint'\n    })\n    .find((d) => {\n      return range.isEqual(d.getMarker().getBufferRange());\n    });\n  }\n  add (filePath: string, lineNumber: number) {\n    const project = XAtom.project.getActive();\n    return Storage\n      .breakpoint\n      .insert({\n        projectId: project._id,\n        condition: '',\n        filePath,\n        lineNumber,\n        columnNumber: 0\n      })\n      .then((result) => {\n        if (this.currentEditor && this.currentEditor.getPath() === filePath) {\n          this.createMarker(this.currentEditor, lineNumber);\n          this.emitter.emit('didAdd', result);\n        }\n        return result;\n      });\n  }\n  remove (filePath: string, lineNumber: number) {\n    const project = XAtom.project.getActive();\n    const breakpointData: Breakpoint = {\n      filePath,\n      lineNumber,\n      columnNumber: 0,\n      condition: ''\n    };\n    return Storage\n      .breakpoint\n      .remove({\n        projectId: project._id,\n        filePath,\n        lineNumber\n      })\n      .then(() => {\n        this.emitter.emit('didRemove', breakpointData);\n        const currentMarker = BreakpointManager.getMarkerFromLineNumber(lineNumber);\n        if (currentMarker) {\n          currentMarker.destroy();\n        }\n      });\n  }\n  find (filePath: string, lineNumber: number) {\n    const project = XAtom.project.getActive();\n    return Storage.breakpoint.findOne({\n      projectId: project._id,\n      filePath,\n      lineNumber\n    });\n  }\n  createMarker (editor: any, lineNumber: number) {\n    let range = new Range([lineNumber, 0], [lineNumber, 0]);\n    let marker = editor.markBufferRange(range);\n    let decorator = editor.decorateMarker(marker, {\n      type: 'line-number',\n      class: 'xatom-breakpoint'\n    });\n    this.markers.add(new Disposable(() => marker.destroy()));\n  }\n  onDidAdd (cb) {\n    return this.emitter.on('didAdd', cb);\n  }\n  onDidRemove (cb) {\n    return this.emitter.on('didRemove', cb);\n  }\n  destroy () {\n    this.emitter.dispose();\n    this.markers.dispose();\n  }\n}\n"]}