{"version":3,"file":"Storage.js","sourceRoot":"","sources":["../src2/Storage.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel';\n/*!\n * XAtom Debug\n * Copyright(c) 2017 Williams Medina <williams.medinaa@gmail.com>\n * MIT Licensed\n */\nimport { filter, find } from 'lodash';\nconst path = require('path');\nconst levelup = require('levelup');\nconst sublevel = require('level-sublevel');\nconst cuid = require('cuid');\nconst dbPath = path.join(atom['configDirPath'], 'storage', 'xatom-debug');\n\nconst db = sublevel(levelup(dbPath, {\n  valueEncoding: 'json'\n}));\n\nexport class Collection {\n  constructor (protected db) {\n    //\n  }\n  put (value: any): Promise<any> {\n    return new Promise((resolve, reject) => {\n      const uid = cuid();\n      this.db.put(uid, value, (err, data) => {\n        if (err) reject(err);\n        resolve(this.get(uid));\n      });\n    })\n  }\n  find (data: any): Promise<any> {\n    return this\n      .getItems()\n      .then((items) => {\n        return filter(items, data);\n      });\n  }\n  findOne (data): Promise<any> {\n    return new Promise((resolve, reject) => {\n      const stream = this.db.createReadStream();\n      stream.on('data', (item) => {\n        if(find([item.value], data)) {\n          resolve(this.get(item.key));\n          stream.destroy();\n        }\n      });\n      stream.once('end', () => resolve(null));\n    });\n  }\n  delete (data): Promise<any> {\n    return this.findOne(data).then((item) => {\n      return this.del(item.uid);\n    })\n  }\n  get (uid: string): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.db.get(uid, (err, data) => {\n        if (err) reject(err);\n        resolve(Object.assign(data, {\n          uid: uid\n        }));\n      });\n    });\n  }\n  del (uid: string): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.db.del(uid, (err, data) => {\n        if (err) reject(err);\n        resolve(uid);\n      });\n    });\n  }\n  getItems (): Promise<any[]> {\n    return new Promise((resolve, reject) => {\n      const getters = [];\n      this\n        .db\n        .createReadStream()\n        .on('data', async (item) => {\n          getters.push(this.get(item.key));\n        })\n        .once('end', () => {\n          Promise.all(getters).then((items) => {\n            resolve(items);\n          });\n        });\n    });\n  }\n}\n\nexport class Project extends Collection {\n  private breakpoints = db.sublevel('breakpoints');\n  private expressions = db.sublevel('expressions');\n  get (uid: string): Promise<any> {\n    return super\n      .get(uid)\n      .then((data) => {\n        return Object.assign({}, data, {\n          breakpoints: new Collection(this.breakpoints.sublevel(uid)),\n          expressions: new Collection(this.expressions.sublevel(uid))\n        });\n      });\n  }\n}\n\nexport const Storage = new Project(db.sublevel('projects'));\n"]}