{"version":3,"file":"Location.js","sourceRoot":"","sources":["../src2/Location.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel';\n/*!\n * XAtom Debug\n * Copyright(c) 2017 Williams Medina <williams.medinaa@gmail.com>\n * MIT Licensed\n */\n\nconst { CompositeDisposable, Range, Emitter, Disposable } = require('atom');\nimport { Breakpoint } from './breakpoint';\nimport { get } from 'lodash';\n\nexport class Location {\n  private lineMarker: any;\n  private lineNumberMarker: any;\n  private lineDecorator: any;\n  private lineNumberDecorator: any;\n  private className: string;\n  private editor: any;\n  constructor (private location: Breakpoint, type?: string) {\n    this.openEditor(location);\n    this.setClassName(type);\n  }\n  setClassName (type: string) {\n    let typeClass = '';\n    if (type) {\n      typeClass = `xatom-debug-location-${type}`;\n    }\n    this.className = `xatom-debug-location ${typeClass}`;\n  }\n  async markLocation (location: Breakpoint) {\n    if (this.lineDecorator) this.lineDecorator.destroy();\n    if (this.lineNumberDecorator) this.lineNumberDecorator.destroy();\n    if (this.lineMarker) this.lineMarker.destroy();\n    if (this.lineNumberMarker) this.lineNumberMarker.destroy();\n    const range = new Range(\n      [location.lineNumber, location.columnNumber],\n      [location.lineNumber, location.columnNumber]);\n    this.lineMarker = this.editor.markBufferRange(range);\n    this.lineNumberMarker = this.editor.markBufferRange(range);\n    this.lineDecorator = this.editor.decorateMarker(this.lineMarker, {\n      type: 'line',\n      class: this.className\n    });\n    this.lineNumberDecorator = this.editor.decorateMarker(this.lineNumberMarker, {\n      type: 'line-number',\n      class: this.className\n    });\n    atom.focus();\n  }\n  updateDecorators () {\n    this.lineDecorator.setProperties({\n      type: 'line',\n      class: this.className\n    });\n    this.lineNumberDecorator.setProperties({\n      type: 'line-number',\n      class: this.className\n    });\n  }\n  async openEditor (location: Breakpoint) {\n    const lineRange = new Range([location.lineNumber, 0],\n      [location.lineNumber, 0]);\n    this.editor = <any> await atom.workspace.open(location.filePath, {\n      initialLine: location.lineNumber || 0,\n      initialColumn: location.columnNumber || 0\n    });\n    this.editor\n      .getGutters()\n      .filter((gutter) => gutter.name !== 'line-number')\n      .forEach((gutter) => {\n        gutter.hide();\n      });\n    const decorator = this.editor\n      .getLineNumberDecorations({\n        class: 'xatom-breakpoint'\n      })\n      .find((d) => {\n        return lineRange.isEqual(d.getMarker().getBufferRange());\n      });\n    if (decorator) {\n      this.setClassName('breakpoint');\n    }\n    this.markLocation(location);\n    this.editor.onDidAddDecoration((decoration) => {\n      const className = get(decoration, 'properties.class');\n      const isBreakpoint = className === 'xatom-breakpoint';\n      if (isBreakpoint && lineRange.isEqual(decoration.getMarker().getBufferRange())) {\n        this.setClassName('breakpoint');\n        this.updateDecorators();\n      }\n    });\n  }\n  destroy () {\n    if (this.editor) {\n      this\n        .editor\n        .getGutters()\n        .filter((gutter) => gutter.name !== 'line-number')\n        .forEach((gutter) => gutter.show());\n    }\n    if (this.lineDecorator) this.lineDecorator.destroy();\n    if (this.lineNumberDecorator) this.lineNumberDecorator.destroy();\n    if (this.lineMarker) this.lineMarker.destroy();\n    if (this.lineNumberMarker) this.lineNumberMarker.destroy();\n  }\n}\n"]}