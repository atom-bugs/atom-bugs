{"version":3,"file":"XAtomDebug.js","sourceRoot":"","sources":["../src2/XAtomDebug.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel';\n/*!\n * XAtom Debug\n * Copyright(c) 2017 Williams Medina <williams.medinaa@gmail.com>\n * MIT Licensed\n */\nconst { CompositeDisposable, Disposable } = require('atom');\nimport { XAtom } from './XAtom';\nimport { Project } from './Project';\n\nimport { ToolbarView } from './ToolbarView';\nimport {\n  DebugControlView,\n  DebugAreaView,\n  DebugNavigatorView,\n  DEBUG_NAVIGATOR_URI,\n  DEBUG_AREA_URI\n} from './debug';\nimport { Breakpoint, BreakpointManager, BreakpointNavigatorView, BREAKPOINT_NAVIGATOR_URI } from './breakpoint';\nimport { SchemeEditorView, SCHEME_EDITOR_URI } from './SchemeEditorView';\nimport { PluginManager, PluginSession } from './plugin';\nimport { Storage } from './storage';\n\nexport class XAtomDebug {\n  private pluginManager: PluginManager;\n  // static views\n  private toolbarView = new ToolbarView(null);\n  private debugControlView = new DebugControlView(null);\n  // dynamic views\n  private schemeEditorView = new SchemeEditorView(null);\n  private debugAreaView = new DebugAreaView(null);\n  private debugNavigatorView = new DebugNavigatorView(null);\n\n  private subscriptions: any;\n  constructor () {\n    // managers\n    this.pluginManager = new PluginManager(\n      this.toolbarView,\n      this.debugControlView,\n      this.debugAreaView,\n      this.debugNavigatorView\n    );\n    // subscriptions\n    this.subscriptions = new CompositeDisposable(\n      // Set projects\n      atom.project.onDidChangePaths(() => {\n        this.toolbarView.setProjects(atom.project.getDirectories());\n      }),\n      // Set Plugins\n      this.pluginManager.onDidChangePlugins((plugins) => {\n        this.schemeEditorView.setPlugins(plugins);\n      }),\n      // Listen Toolbar events\n      this.toolbarView.onDidRun(() => this.pluginManager.execute('run')),\n      this.toolbarView.onDidStop(() => this.pluginManager.execute('stop')),\n      this.toolbarView.onDidSelectProject(async (projectPath) => {\n        let project = await Storage.project.findOne({ projectPath });\n        if (!project) {\n          project = await Storage.project.insert(<Project> { projectPath });\n        }\n        XAtom.project.setActive(<Project> project);\n      }),\n      XAtom.project.onDidChange(() => XAtom.breakpoints.restore()),\n      // Listen Debug Navigator events\n      this.debugControlView.onDidContinue(() => this.pluginManager.execute('continue')),\n      this.debugControlView.onDidPause(() => this.pluginManager.execute('pause')),\n      this.debugControlView.onDidStepOver(() => this.pluginManager.execute('stepOver')),\n      this.debugControlView.onDidStepInto(() => this.pluginManager.execute('stepInto')),\n      this.debugControlView.onDidStepOut(() => this.pluginManager.execute('stepOut')),\n      this.debugAreaView.onDidExitProcess(() => this.pluginManager.getSession().end()),\n      // Observe text editors ::observeActiveTextEditor\n      atom.workspace.getCenter().observeActivePaneItem((item) => {\n        if (!atom.workspace.isTextEditor(item)) return;\n        XAtom.breakpoints.attachEditor(item);\n      }),\n      // Listean Breakpoints\n      XAtom.breakpoints.onDidAdd((b: Breakpoint) => {\n        this.pluginManager.execute('addBreakpoint', [b]);\n      }),\n      XAtom.breakpoints.onDidRemove((b: Breakpoint) => {\n        this.pluginManager.execute('removeBreakpoint', [b]);\n      }),\n      // Register panel toggle views\n      atom.workspace.addOpener((uri) => {\n        if (uri === DEBUG_NAVIGATOR_URI) return this.debugNavigatorView;\n        if (uri === DEBUG_AREA_URI) return this.debugAreaView;\n        if (uri === SCHEME_EDITOR_URI) return this.schemeEditorView;\n        if (uri === BREAKPOINT_NAVIGATOR_URI) return new BreakpointNavigatorView(null);\n      }),\n      // Destroy panel views when package is deactivated\n      new Disposable(() => {\n        atom.workspace.getPaneItems().forEach((item) => {\n          if (item instanceof DebugNavigatorView ||\n            item instanceof DebugAreaView ||\n            item instanceof SchemeEditorView ||\n            item instanceof BreakpointNavigatorView) {\n            item.destroy();\n          }\n        });\n      }),\n      // Commands\n      atom.commands.add('atom-workspace', {\n        'XAtom: Toggle Debugger': () => {\n          this.toolbarView.toggle();\n        },\n        'XAtom: Open Breakpoint Navigator': () => {\n          atom.workspace.open(BREAKPOINT_NAVIGATOR_URI, {});\n        }\n      })\n    );\n  }\n  bind (object: any, functionName: string): Function {\n    return object[functionName].bind(object);\n  }\n  getProvider () {\n    return {\n      addPlugin: this.bind(this.pluginManager, 'addPlugin'),\n      removePlugin: this.bind(this.pluginManager, 'removePlugin'),\n      getSession: this.bind(this.pluginManager, 'getSession'),\n      getLauncher: ()  => {\n        return {\n          start: this.bind(this.debugAreaView, 'startProcess')\n        }\n      }\n    };\n  }\n  destroy (): void {\n    XAtom.breakpoints.destroy();\n    this.subscriptions.dispose();\n    this.toolbarView.destroy();\n    this.pluginManager.destroy();\n  }\n}\n"]}