{"version":3,"file":"XAtomDebug.js","sourceRoot":"","sources":["../src2/XAtomDebug.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel';\n/*!\n * XAtom Debug\n * Copyright(c) 2017 Williams Medina <williams.medinaa@gmail.com>\n * MIT Licensed\n */\nconst { CompositeDisposable, Disposable } = require('atom');\nimport { ToolbarView } from './ToolbarView';\nimport { DebugControlView } from './DebugControlView';\n// import { OutputView, OUTPUT_URI } from './OutputView';\nimport { DebugAreaView, DEBUG_AREA_URI } from './DebugAreaView';\nimport { DebugNavigatorView, DEBUG_NAVIGATOR_URI } from './DebugNavigatorView';\nimport { SchemeEditorView, SCHEME_EDITOR_URI } from './SchemeEditorView';\nimport { PluginManager } from './Plugin';\nimport { Session } from './Session';\nimport { Storage } from './Storage';\nimport { Breakpoint, BreakpointManager } from './Breakpoint';\n\nexport class XAtomDebug {\n  private toolbarView: ToolbarView;\n  private schemeEditorView: SchemeEditorView;\n  private debugControlView: DebugControlView;\n  private debugAreaView: DebugAreaView;\n  private debugNavigatorView: DebugNavigatorView;\n  private subscriptions: any;\n  private pluginManager: PluginManager;\n  private breakpointManager: BreakpointManager;\n  activate (): void {\n    // views\n    this.toolbarView = new ToolbarView(null);\n    this.schemeEditorView = new SchemeEditorView(null);\n    this.debugControlView = new DebugControlView(null);\n    this.debugNavigatorView = new DebugNavigatorView(null);\n    this.debugAreaView = new DebugAreaView(null);\n    // managers\n    this.breakpointManager = new BreakpointManager();\n    this.pluginManager = new PluginManager(\n      this.toolbarView,\n      this.debugControlView,\n      this.debugAreaView,\n      this.debugNavigatorView,\n      this.breakpointManager\n    );\n    this.subscriptions = new CompositeDisposable(\n      // Set projects\n      atom.project.onDidChangePaths(() => {\n        this.toolbarView.setProjects(atom.project.getDirectories());\n      }),\n      // Set Plugins\n      this.pluginManager.onDidChangePlugins((plugins) => {\n        this.schemeEditorView.setPlugins(plugins);\n      }),\n      // Listen Toolbar events\n      this.toolbarView.onDidRun(() => this.pluginManager.execute('run')),\n      this.toolbarView.onDidStop(() => this.pluginManager.execute('stop')),\n      this.toolbarView.onDidSelectProject(async (projectPath) => {\n        let project = await Storage.findOne({\n          path: projectPath\n        });\n        if (project) {\n          const breakpoints = await project.breakpoints.getItems();\n          this.breakpointManager.setBreakpoints(breakpoints);\n        } else {\n          project = await Storage.put({\n            path: projectPath\n          });\n        }\n        this.breakpointManager.storage = project.breakpoints;\n      }),\n      // Listen Debug Navigator events\n      this.debugControlView.onDidContinue(() => this.pluginManager.execute('continue')),\n      this.debugControlView.onDidPause(() => this.pluginManager.execute('pause')),\n      this.debugControlView.onDidStepOver(() => this.pluginManager.execute('stepOver')),\n      this.debugControlView.onDidStepInto(() => this.pluginManager.execute('stepInto')),\n      this.debugControlView.onDidStepOut(() => this.pluginManager.execute('stepOut')),\n      this.debugAreaView.onDidExitProcess(() => this.pluginManager.getSession().end()),\n      // Observe text editors ::observeActiveTextEditor\n      atom.workspace.getCenter().observeActivePaneItem((item) => {\n        if (!atom.workspace.isTextEditor(item)) return;\n        this.breakpointManager.attachBreakpoints(item);\n      }),\n      // Listean Breakpoints\n      this.breakpointManager.onDidAddBreakpoint((b: Breakpoint) => {\n        this.pluginManager.execute('addBreakpoint', [b]);\n      }),\n      this.breakpointManager.onDidRemoveBreakpoint((b: Breakpoint) => {\n        this.pluginManager.execute('removeBreakpoint', [b]);\n      }),\n      // Register panel toggle views\n      atom.workspace.addOpener((uri) => {\n        if (uri === DEBUG_NAVIGATOR_URI) return this.debugNavigatorView;\n        if (uri === DEBUG_AREA_URI) return this.debugAreaView;\n        if (uri === SCHEME_EDITOR_URI) return this.schemeEditorView;\n      }),\n      // Destroy panel views when package is deactivated\n      new Disposable(() => {\n        atom.workspace.getPaneItems().forEach((item) => {\n          if (item instanceof DebugNavigatorView ||\n            item instanceof DebugAreaView ||\n            item instanceof SchemeEditorView) {\n            item.destroy();\n          }\n        });\n      })\n    );\n  }\n  bind (object: any, functionName: string): Function {\n    return object[functionName].bind(object);\n  }\n  providePlugin () {\n    return {\n      addPlugin: this.bind(this.pluginManager, 'addPlugin'),\n      removePlugin: this.bind(this.pluginManager, 'removePlugin'),\n      getSession: this.bind(this.pluginManager, 'getSession'),\n      getLauncher: ()  => {\n        return {\n          start: this.bind(this.debugAreaView, 'startProcess')\n        }\n      }\n    };\n  }\n  deactivate (): void {\n    this.subscriptions.dispose();\n    this.toolbarView.destroy();\n    this.breakpointManager.destroy();\n    this.pluginManager.destroy();\n  }\n}\n\nmodule.exports = new XAtomDebug();\n"]}