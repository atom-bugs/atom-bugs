{"version":3,"file":"scheme-view.js","sourceRoot":"","sources":["../../src/scheme/scheme-view.ts"],"names":[],"mappings":"AAAA,WAAW,CAAA;AACX;;;;GAIG;AAEH,OAAO,EAEL,YAAY,EAGZ,UAAU,EACV,aAAa,EACb,aAAa,EACb,qBAAqB,EACtB,MAAM,kBAAkB,CAAA;AAEzB,OAAO,EAAE,YAAY,EAAE,MAAO,QAAQ,CAAC;AAOvC,MAAM;IAIJ,YAAa,OAAsB;QACjC,IAAI,CAAC,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QACjC,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAA;QAChE,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,wBAAwB,CAAA;QAEjD,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE;YAC1B,aAAa,CAAC,0BAA0B,EAAE;gBACxC,QAAQ,EAAE;oBACR,YAAY,CAAC;wBACX,KAAK,EAAE;4BACL,IAAI,CAAC,KAAK,EAAE,CAAA;wBACd,CAAC;qBACF,EAAE;wBACD,UAAU,CAAC,OAAO,CAAC;qBACpB,CAAC;iBACH;aACF,CAAC;SACH,CAAC,CAAA;QAEF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;YACxC,IAAI,EAAE,IAAI,CAAC,OAAO;YAClB,OAAO,EAAE,KAAK;SACf,CAAC,CAAA;QAEF,qBAAqB,CAAC,IAAI,CAAC,MAAM,EAAE;YACjC,iBAAiB;YACjB,WAAW;SACZ,EAAE,OAAO,CAAC,CAAC;IACd,CAAC;IACD,IAAI;QACF,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAA;IACnB,CAAC;IACD,KAAK;QACH,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAA;IACnB,CAAC;IACD,SAAS,CAAE,MAAc;IAEzB,CAAC;IACD,UAAU;QACR,MAAM,CAAC,IAAI,CAAC,OAAO,CAAA;IACrB,CAAC;IACD,OAAO;QACL,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAA;QACrB,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAA;IACtB,CAAC;CACF","sourcesContent":["'use babel'\n/*!\n * Atom Bugs\n * Copyright(c) 2017 Williams Medina <williams.medinaa@gmail.com>\n * MIT Licensed\n */\n\nimport {\n  createGroupButtons,\n  createButton,\n  createIcon,\n  createIconFromPath,\n  createText,\n  createElement,\n  insertElement,\n  attachEventFromObject\n} from '../element/index'\nimport { Plugin } from '../plugin/index'\nimport { EventEmitter }  from 'events';\n\nexport interface SchemeOptions {\n  didSelectPlugin?: Function,\n  didChange?: Function\n}\n\nexport class SchemeView {\n  private element: HTMLElement\n  private events: EventEmitter;\n  private panel: any\n  constructor (options: SchemeOptions) {\n    this.events = new EventEmitter();\n    this.element = document.createElement('atom-bugs-scheme-editor')\n    this.element.innerHTML = '<h1> Hello World </h1>'\n\n    insertElement(this.element, [\n      createElement('atom-bugs-scheme-buttons', {\n        elements: [\n          createButton({\n            click: () => {\n              this.close()\n            }\n          }, [\n            createText('Close')\n          ])\n        ]\n      })\n    ])\n\n    this.panel = atom.workspace.addModalPanel({\n      item: this.element,\n      visible: false\n    })\n\n    attachEventFromObject(this.events, [\n      'didSelectPlugin',\n      'didChange'\n    ], options);\n  }\n  open () {\n    this.panel.show()\n  }\n  close () {\n    this.panel.hide()\n  }\n  addPlugin (plugin: Plugin) {\n\n  }\n  getElement () {\n    return this.element\n  }\n  destroy () {\n    this.element.remove()\n    this.panel.destroy()\n  }\n}\n"]}