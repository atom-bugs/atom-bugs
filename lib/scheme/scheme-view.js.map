{"version":3,"file":"scheme-view.js","sourceRoot":"","sources":["../../src/scheme/scheme-view.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\n/*!\n * Atom Bugs\n * Copyright(c) 2017 Williams Medina <williams.medinaa@gmail.com>\n * MIT Licensed\n */\n\nimport {\n  createGroupButtons,\n  createButton,\n  createIcon,\n  createIconFromPath,\n  createText,\n  createElement,\n  insertElement,\n  attachEventFromObject\n} from '../element/index'\nimport { Plugin } from '../plugin/index'\nimport { EventEmitter }  from 'events'\n\nexport interface SchemeOptions {\n  didSelectPlugin?: Function,\n  didChange?: Function\n}\n\nexport class SchemeView {\n  private element: HTMLElement\n  private listElement: HTMLElement\n  private editorElement: HTMLElement\n  private data: Array<any>;\n  private events: EventEmitter\n  private panel: any\n  constructor (options: SchemeOptions) {\n    this.events = new EventEmitter()\n    this.element = document.createElement('atom-bugs-scheme')\n    this.listElement = createElement('atom-bugs-scheme-list')\n    this.editorElement = createElement('atom-bugs-scheme-editor', {\n      className: 'native-key-bindings'\n    })\n    insertElement(this.element, [\n      createElement('atom-bugs-scheme-content', {\n        elements: [ this.listElement, this.editorElement ]\n      }),\n      createElement('atom-bugs-scheme-buttons', {\n        elements: [\n          createButton({\n            click: () => this.close()\n          }, [createText('Close')])\n        ]\n      })\n    ])\n    this.panel = atom.workspace.addModalPanel({\n      item: this.element,\n      visible: false\n    })\n    attachEventFromObject(this.events, [\n      'didSelectPlugin',\n      'didChange'\n    ], options)\n  }\n  open (activePlugin?: Plugin) {\n    if (activePlugin) {\n      this.openPlugin(activePlugin)\n    }\n    this.panel.show()\n  }\n  close () {\n    this.panel.hide()\n  }\n  openPlugin (plugin: Plugin) {\n    let id = this.getPluginId(plugin)\n    // fund plugin and activate\n    let item = this.listElement.querySelector(`[id=\"${id}\"]`)\n    if (!item.classList.contains('active')) {\n      // remove active\n      let items = this.listElement.querySelectorAll('atom-bugs-scheme-item.active');\n      Array.from(items, (item: HTMLElement) => item.classList.remove('active'))\n      // add active class\n      item.classList.add('active');\n      this.editorElement.innerHTML = '';\n      // build options\n      // this.data[plugin.name] = {\n      //\n      // }\n      Object.keys(plugin.options).forEach((name) => {\n        let config = plugin.options[name];\n        let configElement = createElement('atom-bugs-scheme-config', {\n          elements: [\n            createElement('scheme-label', {\n              elements: [createText(config.title)]\n            })\n          ]\n        })\n        console.log('option', name, config)\n        switch (config.type) {\n          case 'string':\n          case 'number':\n            let inputElement: HTMLElement = createElement('input')\n            inputElement.setAttribute('placeholder', config.default)\n            insertElement(configElement, [\n              createElement('scheme-control', {\n                elements: [inputElement]\n              })\n            ])\n            break;\n        }\n        insertElement(this.editorElement, configElement)\n      })\n    }\n  }\n  getPluginId (plugin: Plugin) {\n    let token = btoa(plugin.name)\n    return `plugin-${token}`\n  }\n  getConfiguration () {\n    return this.data;\n  }\n  addPlugin (plugin: Plugin) {\n    let item = createElement('atom-bugs-scheme-item', {\n      id: this.getPluginId(plugin),\n      click: () => {\n        this.openPlugin(plugin)\n      },\n      elements: [\n        createIconFromPath(plugin.iconPath),\n        createText(plugin.name)\n      ]\n    })\n    insertElement(this.listElement, [item])\n    // this.scheme.icon.style.backgroundImage = `url(${plugin.iconPath})`;\n    // this.scheme.name.nodeValue = ` ${plugin.name}`;\n  }\n  getElement () {\n    return this.element\n  }\n  destroy () {\n    this.element.remove()\n    this.panel.destroy()\n  }\n}\n"]}