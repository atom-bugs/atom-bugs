{"version":3,"file":"DebugFrameView.js","sourceRoot":"","sources":["../../src2/debug/DebugFrameView.ts"],"names":[],"mappings":"AAAA,WAAW,CAAC;;;;;;;;;;;;;;;;;;AACZ;;;;GAIG;AAEH,OAAO,EAAE,KAAK,EAAE,MAAM,UAAU,CAAC;AACjC,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,SAAS,CAAC;AAG7D,OAAO,EAAE,IAAI,EAAE,MAAM,MAAM,CAAC;AAM5B,IAAa,cAAc,GAA3B;IAUE,YACU,WAAwB,EACxB,IAAe;QADf,gBAAW,GAAX,WAAW,CAAa;QACxB,SAAI,GAAJ,IAAI,CAAW;QACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;IACnC,CAAC;IAXqC,SAAS;QAC7C,YAAY;QACZ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YACtC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC;YACtC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC;SAC3C,CAAC,CAAC;IACL,CAAC;IAMK,WAAW;;YACf,mBAAmB;YACnB,iEAAiE;YACjE,sEAAsE;YACtE,QAAQ;YACR,sBAAsB;YACtB,cAAc;YACd,MAAM;YACN,IAAI;YACJ,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;YAC1C,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;YAEhF,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG;;UAEvB,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,WAAW;;;8CAGD,QAAQ;kDACJ,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY;aACvF,CAAC;YACV,wDAAwD;QAC1D,CAAC;KAAA;IACD,UAAU;QACR,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;IAClC,CAAC;CACF,CAAA;AAtC+B;IAA7B,OAAO,CAAC,mBAAmB,CAAC;8BAAc,iBAAiB;mDAAC;AACvB;IAArC,MAAM,CAAC,OAAO,EAAE,mBAAmB,CAAC;;;;+CAMpC;AATU,cAAc;IAJ1B,IAAI,CAAC;QACJ,IAAI,EAAE,mBAAmB;QACzB,QAAQ,EAAE,sCAAsC;KACjD,CAAC;qCAYuB,WAAW;GAXvB,cAAc,CAwC1B;SAxCY,cAAc","sourcesContent":["'use babel';\n/*!\n * XAtom Debug\n * Copyright(c) 2017 Williams Medina <williams.medinaa@gmail.com>\n * MIT Licensed\n */\n\nimport { XAtom } from '../XAtom';\nimport { View, ViewElement, Action, Element } from '../View';\nimport { CallFrame } from './CallFrame';\nimport { stat } from 'fs';\nimport { join } from 'path';\n\n@View({\n  name: 'xatom-debug-frame',\n  template: `<div class=\"xatom-group-item\"></div>`\n})\nexport class DebugFrameView {\n  public element: HTMLElement;\n  @Element('.xatom-group-item') itemElement: HTMLButtonElement;\n  @Action('click', '.xatom-group-item') openFrame () {\n    // open file\n    atom.workspace.open(this.data.filePath, {\n      initialLine: this.data.lineNumber || 0,\n      initialColumn: this.data.columnNumber || 0\n    });\n  }\n  constructor (\n    private viewElement: ViewElement,\n    private data: CallFrame) {\n    this.element = this.getElement();\n  }\n  async viewDidLoad () {\n    // if (this.data) {\n    //   const fileExists = await new Promise<boolean>((resolve) => {\n    //     stat(this.data.filePath, (err) => resolve(err ? false : true));\n    //   });\n    //   if (fileExists) {\n    //     // test\n    //   }\n    // }\n    const project = XAtom.project.getActive();\n    const filePath = this.data.filePath.replace(join(project.projectPath, '/'), '');\n\n    this.itemElement.innerHTML = `\n      <div class=\"xatom-debug-frame-name\">\n        ${this.data.functionName || 'anonymous'}\n      </div>\n      <div class=\"xatom-debug-frame-location\">\n        <div class=\"xatom-debug-frame-file\">${filePath}</div>\n        <div class=\"xatom-debug-frame-position\">${this.data.lineNumber + 1}:${this.data.columnNumber}</div>\n      </div>`;\n    // this.itemElement.setAttribute('data-name', filePath);\n  }\n  getElement () {\n    return this.viewElement.element;\n  }\n}\n"]}