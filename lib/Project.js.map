{"version":3,"file":"Project.js","sourceRoot":"","sources":["../src2/Project.ts"],"names":[],"mappings":"AAAA,WAAW,CAAC;AACZ;;;;GAIG;AAEH,MAAM,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAOpC,MAAM;IAGJ;QADQ,YAAO,GAAG,IAAI,OAAO,EAAE,CAAC;IAGhC,CAAC;IACD,SAAS,CAAE,OAAgB;QACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;IAC1C,CAAC;IACD,WAAW,CAAE,EAAE;QACb,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;IAC1C,CAAC;IACD,SAAS;QACP,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;CACF","sourcesContent":["'use babel';\n/*!\n * XAtom Debug\n * Copyright(c) 2017 Williams Medina <williams.medinaa@gmail.com>\n * MIT Licensed\n */\n\nconst { Emitter } = require('atom');\nimport { Item } from './Storage';\n\nexport interface Project extends Item {\n  projectPath: string\n}\n\nexport class ProjectManager {\n  private project: Project;\n  private emitter = new Emitter();\n  constructor () {\n\n  }\n  setActive (project: Project) {\n    this.project = project;\n    this.emitter.emit('didChange', project);\n  }\n  onDidChange (cb) {\n    return this.emitter.on('didChange', cb);\n  }\n  getActive () {\n    return this.project;\n  }\n}\n"]}