{"version":3,"file":"View.js","sourceRoot":"","sources":["../src2/View.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel';\n/*!\n * XAtom Debug\n * Copyright(c) 2017 Williams Medina <williams.medinaa@gmail.com>\n * MIT Licensed\n */\nimport { EventEmitter } from 'events';\nimport 'reflect-metadata';\n\nconst viewControllerRegistry = new EventEmitter();\nviewControllerRegistry.setMaxListeners(0);\n\nfunction getViewController (target: any): Promise<{\n  viewController: ViewController,\n  complete: Function\n}> {\n  return new Promise ((resolve, reject) => {\n    viewControllerRegistry.on('viewControllerLoad', function eventListener (controller: ViewController) {\n      if (Object.getPrototypeOf(controller.controller) === target) {\n        const task = new Promise((taskResolve, taskReject) => {\n          resolve({\n            viewController: controller,\n            complete: taskResolve\n          });\n        });\n        controller.tasks.push(task);\n        viewControllerRegistry.removeListener('viewControllerLoad', eventListener);\n      }\n    })\n  })\n}\n\nfunction getHTMLElement (controller: ViewController, query: string): Promise<HTMLElement> {\n  return new Promise ((resolve, reject) => {\n    const el = controller.viewElement.element.querySelector(query);\n    if (el) {\n      resolve(<HTMLElement> el);\n    } else {\n      reject(`element '${query}' does not exists`);\n    }\n  })\n}\n\n\nexport function Action (eventName: string, query: string) {\n  return function (target, key, descriptor) {\n    getViewController(target).then(async ({ viewController, complete }) => {\n      const el = await getHTMLElement(viewController, query);\n      el.addEventListener(eventName, (event) => {\n        if (target[key]) {\n          target[key].apply(viewController.controller, [event]);\n        }\n      });\n      complete();\n    });\n    return descriptor;\n  }\n}\n\nexport function Element (query: string) {\n  return <any> function (target, key, descriptor) {\n    getViewController(target).then(async ({ viewController, complete }) => {\n      const el = await getHTMLElement(viewController, query);\n      target[key] = el;\n      complete();\n    });\n    return descriptor;\n  }\n}\n\n\nexport function ElementObserver (query: string) {\n  return <any> function (target, key, descriptor) {\n    getViewController(target).then(async ({ viewController, complete }) => {\n      const el = await getHTMLElement(viewController, query);\n      target[key] = el;\n      complete();\n    });\n    return descriptor;\n  }\n}\n\nexport class ViewElement {\n  public element: HTMLElement;\n  constructor (elementName: string, template?: string) {\n    this.element = document.createElement(elementName);\n    this.element.innerHTML = template || '';\n  }\n}\n\nexport class ViewController {\n  public controller: any;\n  public tasks: Array<any> = [];\n  constructor (public viewElement: ViewElement) {\n    // do something\n  }\n}\n\nexport function View (options: { name: string, template?: string }) {\n  return <any> function (target: any, key: string, descriptor: Object) {\n    const paramTypes = Reflect.getMetadata('design:paramtypes', target, key);\n    const element = new ViewElement(options.name, options.template);\n    const controller = new ViewController(element);\n    const paramValues = paramTypes.map((param) => {\n      if (param === ViewElement) return element;\n      if (param === ViewController) return controller;\n      return null;\n    });\n    const createView: any = function () {\n      target.apply(this, paramValues);\n      controller.controller = this;\n      viewControllerRegistry.emit('viewControllerLoad', controller);\n      if (this.viewDidLoad) {\n        Promise.all(controller.tasks).then(() => {\n          this.viewDidLoad();\n        })\n      }\n      return controller.controller;\n    };\n    createView.prototype = target.prototype;\n    return createView;\n  }\n}\n"]}