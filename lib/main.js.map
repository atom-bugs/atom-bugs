{"version":3,"file":"main.js","sourceRoot":"","sources":["../src/main.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel';\n/*!\n * Atom Bugs\n * Copyright(c) 2017 Williams Medina <williams.medinaa@gmail.com>\n * MIT Licensed\n */\nimport { Bugs } from './bugs'\nconst { CompositeDisposable } = require('atom');\n\nexport default {\n\n  subscriptions: null,\n\n  toolbarPanel: null,\n  debugPanel: null,\n  consolePanel: null,\n\n  bugs: null,\n\n  activate (state: any) {\n    // create atom bugs instance\n    this.bugs = new Bugs();\n    this.bugs.toolbarView.didRun(() => this.consolePanel.show())\n    this.bugs.toolbarView.didStop(() => this.consolePanel.hide())\n    // set Paths\n    let projects = atom.project['getPaths']()\n    this.bugs.toolbarView.setPaths(projects)\n    // observe path changes\n    atom.project.onDidChangePaths((projects) => this.bugs.toolbarView.setPaths(projects))\n    // Toolbar Panel\n    this.toolbarPanel = atom.workspace['addTopPanel']({\n      item: this.bugs.getToolbarElement()\n    });\n    // Console Panel\n    this.consolePanel = atom.workspace.addBottomPanel({\n      item: this.bugs.getConsoleElement(),\n      visible: false\n    });\n    // Debug Area Panel\n    this.debugPanel = atom.workspace.addRightPanel({\n      item: this.bugs.getDebugAreaElement(),\n      visible: true\n    });\n    // add commands\n    let commands = atom.commands.add('atom-workspace', {\n      'atom-bugs:run': () => this.bugs.pluginManager.run({}),\n      'atom-bugs:stop': () => this.bugs.pluginManager.stop(),\n      'atom-bugs:pause': () => this.bugs.pluginManager.pause(),\n      'atom-bugs:step-over': () => this.bugs.pluginManager.stepOver(),\n      'atom-bugs:step-into': () => this.bugs.pluginManager.stepInto(),\n      'atom-bugs:step-out': () => this.bugs.pluginManager.stepOut()\n    });\n    this.subscriptions = new CompositeDisposable();\n    // add commands subs\n    this.subscriptions.add(commands);\n  },\n\n  provideService () {\n    return this.bugs.pluginManager;\n  },\n\n  deactivate () {\n    this.subscriptions.dispose();\n    // destroys views\n    this.bugs.destroy();\n    // destroy panels\n    this.toolbarPanel.destroy();\n    this.debugPanel.destroy();\n    this.consolePanel.destroy();\n  }\n};\n"]}