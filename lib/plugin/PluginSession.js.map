{"version":3,"file":"PluginSession.js","sourceRoot":"","sources":["../../src2/plugin/PluginSession.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel';\n/*!\n * XAtom Debug\n * Copyright(c) 2017 Williams Medina <williams.medinaa@gmail.com>\n * MIT Licensed\n */\nimport { XAtom } from '../XAtom';\nimport {\n  DebugControlView,\n  DebugNavigatorView,\n  DebugAreaView,\n  CallFrames,\n  DEBUG_NAVIGATOR_URI,\n  DEBUG_AREA_URI\n} from '../debug';\nimport { Breakpoint, BREAKPOINT_NAVIGATOR_URI } from '../breakpoint';\nimport { Location } from '../Location';\n\nexport interface PluginSession {\n  getControlOptions (): void;\n  getSchemeOptions (): void;\n  start (): void;\n  end (): void;\n  status (options: {\n    text: string,\n    type?: 'error' | 'warning' | 'success',\n    loading: boolean\n  }): void;\n}\n\nexport function createSession (\n  toolbarView,\n  debugControlView: DebugControlView,\n  debugAreaView: DebugAreaView,\n  debugNavigatorView: DebugNavigatorView) {\n  let currentLocation;\n  return <PluginSession> {\n    getControlOptions (): Promise<any> {\n      return new Promise((resolve, reject) => {\n        resolve({\n          pauseOnException: debugControlView.isPauseOnExceptionEnabled(),\n          disableBreakpoints: debugControlView.isBreakpointsDisabled()\n        });\n      });\n    },\n    getSchemeOptions (): Promise<any> {\n      const editor = atom.workspace.getCenter().getActivePaneItem();\n      if (!atom.workspace.isTextEditor(editor)) return;\n      return new Promise((resolve, reject) => {\n        resolve({\n          currentPath: editor.getPath()\n        });\n      });\n    },\n    getBreakpoints (): Promise<any> {\n      return XAtom.breakpoints.get();\n    },\n    async markLocation (location: Breakpoint, type?: string) {\n      if (currentLocation) currentLocation.destroy();\n\n      return currentLocation = new Location(location, type);\n    },\n    async markException (location: Breakpoint) {\n      return this.markLocation(location, 'exception');\n    },\n    // async markBreakpoint (location: Breakpoint) {\n    //   return this.markLocation(location, 'breakpoint');\n    // },\n    setFrames (frames: CallFrames) {\n      debugNavigatorView.setFrames(frames);\n    },\n    status (o): void  {\n      toolbarView.setStatusText(o.text);\n      toolbarView.setStatusLoading(o.loading || false);\n      toolbarView.setStatusState(o.type || '');\n    },\n    pause () {\n      debugControlView.enableControls();\n    },\n    resume () {\n      debugControlView.disableControls();\n    },\n    start (): void {\n      toolbarView.disableControls();\n      debugControlView.show();\n      atom.workspace.open(DEBUG_AREA_URI, {});\n      atom.workspace.open(BREAKPOINT_NAVIGATOR_URI, {});\n      atom.workspace.open(DEBUG_NAVIGATOR_URI, {});\n    },\n    end (): void {\n      if (currentLocation) currentLocation.destroy();\n      toolbarView.enableControls();\n      debugControlView.hide();\n      atom.workspace.hide(DEBUG_AREA_URI);\n      atom.workspace.hide(DEBUG_NAVIGATOR_URI);\n    }\n  }\n}\n"]}