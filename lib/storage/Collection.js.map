{"version":3,"file":"Collection.js","sourceRoot":"","sources":["../../src2/storage/Collection.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel';\n/*!\n * XAtom Debug\n * Copyright(c) 2017 Williams Medina <williams.medinaa@gmail.com>\n * MIT Licensed\n */\n\nconst path = require('path');\nconst Datastore = require('nedb');\nconst storagePath = path.resolve(atom['configDirPath'], 'storage', 'xatom');\n\nexport class Collection {\n  private db;\n  constructor (private filename: string) {\n    this.db = new Datastore(path.join(storagePath), `${filename}.db`);\n  }\n  connect (): Promise<any> {\n    return new Promise((resolve, reject) => {\n      return this.db.loadDatabase((err) => {\n        if (err) {\n          reject();\n        } else {\n          resolve(this.db);\n        }\n      })\n    });\n  }\n  insert (data: any) {\n    return new Promise(async (resolve, reject) => {\n      const db = await this.connect();\n      db.insert(data, (err, data) => {\n        if (err) reject(err);\n        resolve(data);\n      });\n    });\n  }\n  remove (data: any) {\n    return new Promise(async (resolve, reject) => {\n      const db = await this.connect();\n      db.remove(data, (err, data) => {\n        if (err) reject(err);\n        resolve(data);\n      });\n    });\n  }\n  findOne (options: any) {\n    return new Promise(async (resolve, reject) => {\n      const db = await this.connect();\n      db.findOne(options, (err, data) => {\n        if (err) reject(err);\n        resolve(data);\n      });\n    });\n  }\n  find (options: any): Promise<any[]> {\n    return new Promise(async (resolve, reject) => {\n      const db = await this.connect();\n      db.find(options, (err, data) => {\n        if (err) reject(err);\n        resolve(data);\n      });\n    });\n  }\n}\n"]}