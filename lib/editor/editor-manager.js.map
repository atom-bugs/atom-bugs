{"version":3,"file":"editor-manager.js","sourceRoot":"","sources":["../../src/editor/editor-manager.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel';\n/*!\n * Atom Bugs\n * Copyright(c) 2017 Williams Medina <williams.medinaa@gmail.com>\n * MIT Licensed\n */\nimport {\n createIcon,\n createText,\n createButton,\n createElement,\n insertElement,\n attachEventFromObject\n} from '../element/index';\n\nimport { BreakpointManager, Breakpoint, Breakpoints } from './breakpoint-manager';\nimport { PluginManager } from '../plugin/index';\nimport { InspectorView } from '../inspector/index';\nimport { EventEmitter }  from 'events';\n\nexport interface EditorOptions {\n  pluginManager: PluginManager,\n  didAddBreakpoint?: Function,\n  didRemoveBreakpoint?: Function,\n  didBreak?: Function\n}\n\nexport class EditorManager {\n\n  private currentEditor: any;\n\n  private currentBreakMarker: any;\n  private currentExpressionMarker: any;\n  private currentEvaluationMarker: any;\n\n  private activateExpressionListerner: boolean = true;\n\n  private breakpointHandler: Function;\n  private expressionHandler: Function;\n  private evaluateHandler: any;\n\n  private breakpointManager: BreakpointManager;\n  private pluginManager: PluginManager;\n  private events: EventEmitter;\n\n  constructor (options: EditorOptions) {\n    this.events = new EventEmitter();\n    this.breakpointManager = new BreakpointManager();\n    this.breakpointHandler = this.breakpointListener.bind(this);\n    this.expressionHandler = this.expressionListener.bind(this);\n    this.pluginManager = options.pluginManager;\n    attachEventFromObject(this.events, [\n      'didAddBreakpoint',\n      'didRemoveBreakpoint',\n      'didBreak'\n    ], options);\n    this\n      .breakpointManager\n      .getSavedBreakpoints()\n      .then((breakpoints) => {\n        breakpoints.forEach(({filePath, lineNumber}) => {\n          let marker\n          if (this.currentEditor && filePath === this.currentEditor.getPath()) {\n            marker = this.createBreakpointMarker(lineNumber);\n          }\n          this.breakpointManager.addBreakpoint(undefined, lineNumber, filePath);\n          this.events.emit('didAddBreakpoint', filePath, lineNumber);\n        })\n      })\n  }\n\n  getBreakpoints (): Breakpoints {\n    return this.breakpointManager.getBreakpoints();\n  }\n\n  destroy () {\n    this.currentBreakMarker = undefined;\n    this.currentExpressionMarker = undefined;\n    this.currentEvaluationMarker = undefined;\n    this.removeMarkers();\n  }\n\n  breakOnFile (filePath: string, lineNumber: number) {\n    // this.createConsoleLine('', [\n    //   createText('Break on'),\n    //   createText(`${filePath}:${lineNumber}`)\n    // ]);\n    this.events.emit('didBreak', filePath, lineNumber);\n  }\n\n  createBreakMarker (editor, lineNumber: number) {\n    this.removeBreakMarker();\n    let range = [[lineNumber - 1, 0], [lineNumber - 1, 0]];\n    this.currentBreakMarker = editor.markBufferRange(range);\n    editor.decorateMarker(this.currentBreakMarker, {\n      type: 'line',\n      class: 'bugs-break-line'\n    })\n  }\n\n  removeMarkers () {\n    this.removeBreakMarker();\n    this.removeExpressionMarker();\n    this.removeEvaluationMarker();\n  }\n\n  removeBreakMarker () {\n    if (this.currentBreakMarker) {\n      this.currentBreakMarker.destroy();\n    }\n  }\n\n  removeExpressionMarker () {\n    if (this.currentExpressionMarker) {\n      this.currentExpressionMarker.destroy();\n    }\n  }\n\n  async addFeatures (editor) {\n    // Observe active editor\n    if (this.currentEditor && this.currentEditor.editorElement) {\n      // remove breakpoint handler\n      this.currentEditor.editorElement.removeEventListener('click', this.breakpointHandler);\n      // remove expression evaluator\n      this.currentEditor.editorElement.removeEventListener('mousemove', this.expressionHandler);\n    }\n    if (editor && editor.getPath && editor.editorElement) {\n      this.currentEditor = editor;\n      // restore breakpoints\n      let sourceFile = editor.getPath();\n      let breakpoints = await this.breakpointManager.getBreakpointsFromFile(sourceFile);\n      breakpoints.forEach((breakpoint: Breakpoint) => {\n        if (breakpoint.marker) {\n          breakpoint.marker.destroy();\n        }\n        breakpoint.marker = this.createBreakpointMarker(breakpoint.lineNumber);\n      })\n      // add breakpoint handler\n      this.currentEditor.editorElement.addEventListener('click', this.breakpointHandler)\n      this.currentEditor.editorElement.addEventListener('mousemove', this.expressionHandler);\n    }\n  }\n\n  private breakpointListener (e: MouseEvent) {\n    let element = e.target as HTMLElement;\n    if (element.classList.contains('line-number')) {\n      // toggle breakpoints\n      let sourceFile = this.currentEditor.getPath();\n      let lineNumber = Number(element.textContent)\n      let exists = this.breakpointManager.getBreakpoint(sourceFile, lineNumber)\n      if (exists) {\n        this\n          .breakpointManager\n          .removeBreakpoint(exists)\n          .then(() => {\n            this.events.emit('didRemoveBreakpoint', sourceFile, lineNumber);\n            this.pluginManager.removeBreakpoint(sourceFile, lineNumber);\n          });\n      } else {\n        let marker = this.createBreakpointMarker(lineNumber);\n        this\n          .breakpointManager\n          .addBreakpoint(marker, lineNumber, sourceFile)\n          .then(() => {\n            this.events.emit('didAddBreakpoint', sourceFile, lineNumber);\n            this.pluginManager.addBreakpoint(sourceFile, lineNumber);\n          })\n      }\n    }\n  }\n\n  private createBreakpointMarker (lineNumber: any) {\n    let range = [[lineNumber - 1, 0], [lineNumber - 1, 0]]\n    let marker = this.currentEditor.markBufferRange(range)\n    let decorator = this.currentEditor.decorateMarker(marker, {\n      type: 'line-number',\n      class: 'bugs-breakpoint'\n    })\n    return marker;\n  }\n\n  private getPositionFromEvent (e: MouseEvent) {\n    let lines = this.currentEditor.editorElement.querySelector('.lines');\n    var clientX = e.clientX;\n    var clientY = e.clientY;\n    let clientRect = lines.getBoundingClientRect();\n    let screenPosition = this.currentEditor.screenPositionForPixelPosition({\n      top: (clientY - clientRect.top) + this.currentEditor.editorElement.getScrollTop(),\n      left: (clientX - clientRect.left) + this.currentEditor.editorElement.getScrollLeft()\n    });\n    return this.currentEditor.bufferPositionForScreenPosition(screenPosition);\n  }\n\n  private getWordRangeFromPosition (position) {\n    let prevRow = this.currentEditor.buffer.previousNonBlankRow(position.row);\n    let endRow = this.currentEditor.buffer.nextNonBlankRow(position.row);\n    if (!endRow) {\n      endRow = position.row;\n    }\n    let startWord = position;\n    let endWord = position;\n    this.currentEditor.scanInBufferRange(/[ \\,\\{\\}\\(\\;\\)\\[\\]^\\n]+/gm, [[prevRow, 0], position], (s) => {\n      if (s.matchText) {\n        startWord = s.range.end;\n      }\n    })\n    this.currentEditor.scanInBufferRange(/[ \\,\\{\\}\\(\\.\\;\\)\\[\\]\\n]+/g, [position, [endRow, 50]], (s) => {\n      if (s.matchText) {\n        endWord = s.range.start;\n        s.stop();\n      }\n    })\n    return [startWord, endWord];\n  }\n\n  private expressionListener (e: MouseEvent) {\n    if (this.activateExpressionListerner) {\n      let sourceFile = this.currentEditor.getPath();\n      let bufferPosition = this.getPositionFromEvent(e);\n      let scanRange = this.getWordRangeFromPosition(bufferPosition);\n      let expression = this.currentEditor.getTextInBufferRange(scanRange);\n      clearTimeout(this.evaluateHandler)\n      this.evaluateHandler = setTimeout(() => {\n        if (expression && String(expression).trim().length > 0) {\n          this.pluginManager.evaluateExpression(expression, this.createEvaluationView(scanRange));\n        }\n      }, 500);\n    }\n  }\n\n  createEvaluationView (range: any) {\n    return {\n      insertFromResult: (result) => {\n        this.addEvaluationMarker(result, range);\n      }\n    }\n  }\n\n  createInspectorOverlay (result: any) {\n    let element = createElement('atom-bugs-overlay', {\n      className: 'native-key-bindings'\n    });\n    element.setAttribute('tabindex', '0');\n    let inspector = new InspectorView({\n      result,\n      didRequestProperties: (result, inspectorView) => {\n        this.pluginManager.requestProperties(result, inspectorView)\n      }\n    });\n    return insertElement(element, [\n      createElement('atom-bugs-overlay-header', {\n        elements: [ createText(result.className || result.type) ]\n      }),\n      inspector.getElement()\n    ]);\n  }\n\n  addEvaluationMarker (result: any, range) {\n    // highlight expression\n    this.removeExpressionMarker();\n    this.currentExpressionMarker = this.currentEditor.markBufferRange(range)\n    this.currentEditor.decorateMarker(this.currentExpressionMarker, {\n      type: 'highlight',\n      class: 'bugs-expression'\n    })\n    // overlay inspector\n    this.removeEvaluationMarker();\n    let element = this.createInspectorOverlay(result);\n    this.currentEvaluationMarker = this.currentEditor.markBufferRange(range);\n    this.currentEditor.decorateMarker(this.currentEvaluationMarker, {\n      type: 'overlay',\n      class: 'bugs-expression-overlay',\n      item: element\n    });\n    setTimeout(() => {\n      let close = () => {\n        this.activateExpressionListerner = true;\n        this.removeEvaluationMarker();\n      }\n      // let autoClose = setTimeout(close, 15000);\n      element.addEventListener('mouseenter', () => {\n        // clearTimeout(autoClose);\n        this.activateExpressionListerner = false;\n        element.addEventListener('mouseleave', () => close());\n      });\n    }, 0);\n  }\n\n  removeEvaluationMarker () {\n    if (this.currentEvaluationMarker) {\n      this.currentEvaluationMarker.destroy();\n      this.currentEvaluationMarker = undefined;\n    }\n  }\n}\n"]}