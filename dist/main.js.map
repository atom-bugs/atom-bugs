{"version":3,"file":"main.js","sourceRoot":"","sources":["../lib/main.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel';\n/*!\n * Atom Bugs\n * Copyright(c) 2017 Williams Medina <williams.medinaa@gmail.com>\n * MIT Licensed\n */\nimport {\n  ToolbarView,\n  DebugView,\n  EditorView\n} from './ui/index';\n\nimport { PluginManager, pluginActions } from './PluginManager'\nimport { BreakpointManager } from './BreakpointManager'\nimport { Client } from './Client'\n\nconst { CompositeDisposable } = require('atom');\n\nexport default {\n\n  subscriptions: null,\n\n  breakpointManager: null,\n  pluginManager: null,\n\n  toolbarView: null,\n  debugView: null,\n  editorView: null,\n  schemeView: null,\n\n  toolbarPanel: null,\n  debugPanel: null,\n  consolePanel: null,\n\n  createManagers () {\n    // Create manager intances\n    this.breakpointManager = new BreakpointManager();\n    // observe editors\n    this.editorView = new EditorView(this.breakpointManager);\n    this.pluginManager = new PluginManager();\n\n    atom.workspace['observeActivePaneItem']((editor) => {\n      this.editorView.addFeatures(editor);\n    })\n    // Atom Bugs Client\n    let client = new Client(this.debugView,\n      this.toolbarView,\n      this.editorView,\n      this.breakpointManager);\n    // Listen plugin addition\n    this.pluginManager.didAddPlugin((plugin) => {\n      // Register client\n      if (plugin.registerClient) plugin.registerClient(client)\n      // Activate Selected Plugin\n      if (!this.pluginManager.activePlugin) {\n        this.pluginManager.activatePlugin(plugin);\n        this.toolbarView.setScheme(plugin);\n      }\n    });\n    // Evaluate Expression\n    this.editorView.didEvaluateExpression((expression: string, range: any) => {\n      this.pluginManager.didEvaluateExpression(expression, range);\n    })\n    // Add Breakpoint\n    this.breakpointManager.didAddBreakpoint((filePath: string, fileNumber: number) => {\n      this.pluginManager.didAddBreakpoint(filePath, fileNumber);\n    });\n    // Remove Breakpoint\n    this.breakpointManager.didRemoveBreakpoint((filePath: string, fileNumber: number) => {\n      this.pluginManager.didRemoveBreakpoint(filePath, fileNumber);\n    })\n  },\n\n  createToolbar () {\n    // Create Toolbar View\n    this.toolbarView = new ToolbarView();\n    // Open Scheme Editor\n    // this.toolbarView.didOpenSchemeEditor(() => {\n    //   console.log('open editor')\n    // })\n    this.toolbarView.didRun(() => {\n      let editor = atom.workspace.getActiveTextEditor();\n      let currentFile = editor.getPath();\n      let run = this.pluginManager.didRun({\n        currentFile\n      })\n    })\n    this.toolbarView.didStop(() => this.pluginManager.didStop())\n    // set Paths\n    let projects = atom.project['getPaths']()\n    this.toolbarView.setPaths(projects)\n    // observe path changes\n    atom.project.onDidChangePaths((projects) => this.toolbarView.setPaths(projects))\n  },\n\n  createDebugArea () {\n    // Create view instances\n    this.debugView = new DebugView();\n    this.debugView.didPause(() => this.pluginManager.didPause())\n    this.debugView.didResume(() => this.pluginManager.didResume())\n    this.debugView.didStepOver(() => this.pluginManager.didStepOver())\n    this.debugView.didStepInto(() => this.pluginManager.didStepInto())\n    this.debugView.didStepOut(() => this.pluginManager.didStepOut())\n    this.debugView.didBreak(async (filePath, lineNumber) => {\n      // /[^(?:<> \\n)]+\\/[a-zA-Z0-9_ \\-\\/\\-\\.\\*\\+]+(:[0-9:]+)?/g\n      let textEditor = await atom.workspace.open(filePath, {\n        initialLine: lineNumber,\n        initialColumn: 0\n      })\n      this.editorView.createBreakMarker(textEditor, lineNumber);\n    })\n  },\n\n  activate (state: any) {\n\n    this.createToolbar();\n    this.createDebugArea();\n    this.createManagers();\n\n    // Toolbar Panel\n    this.toolbarPanel = atom.workspace.addTopPanel({\n      item: this.toolbarView.getElement(),\n      visible: true\n    });\n    // Console Panel\n    this.consolePanel = atom.workspace.addBottomPanel({\n      item: this.debugView.getConsoleElement(),\n      visible: true\n    });\n    // Debug Area Panel\n    this.debugPanel = atom.workspace.addRightPanel({\n      item: this.debugView.getDebugElement(),\n      visible: true\n    });\n    // Events subscribed to in atom's system can be easily cleaned up with a CompositeDisposable\n    this.subscriptions = new CompositeDisposable();\n    // this.subscriptions.add(atom.commands.add('atom-workspace', {\n    //   'atom-bugs:debug': () => this.debug()\n    // }));\n  },\n\n  provideBugsService () {\n    return this.pluginManager;\n  },\n\n  deactivate () {\n    this.subscriptions.dispose();\n    // destroy panels\n    this.toolbarPanel.destroy();\n    this.debugPanel.destroy();\n    this.consolePanel.destroy();\n    // destroys views\n    this.toolbarView.destroy();\n    this.debugView.destroy();\n    this.editorView.destroy();\n  }\n};\n"]}