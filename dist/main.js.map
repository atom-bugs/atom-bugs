{"version":3,"file":"main.js","sourceRoot":"","sources":["../lib/main.ts"],"names":[],"mappings":"AAAA,WAAW,CAAC;;;;;;;;;AACZ;;;;GAIG;AACH,OAAO,EACL,WAAW,EACX,SAAS,EACV,MAAM,YAAY,CAAC;AAEpB,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAA;AAC/C,OAAO,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAA;AACvD,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAA;AAEjC,MAAM,EAAE,mBAAmB,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAEhD,eAAe;IAEb,aAAa,EAAE,IAAI;IACnB,iBAAiB,EAAE,IAAI;IACvB,aAAa,EAAE,IAAI;IACnB,YAAY,EAAE,IAAI;IAClB,iBAAiB,EAAE,IAAI;IAEvB,WAAW,EAAE,IAAI;IACjB,UAAU,EAAE,IAAI;IAChB,SAAS,EAAE,IAAI;IAEf,YAAY,EAAE,IAAI;IAClB,UAAU,EAAE,IAAI;IAEhB,YAAY;QACV,gBAAgB;QAChB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;YAC7C,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;YACnC,OAAO,EAAE,IAAI;SACd,CAAC,CAAC;QACH,mBAAmB;QACnB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;YAC3C,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;YACjC,OAAO,EAAE,IAAI;SACd,CAAC,CAAC;IACL,CAAC;IAED,cAAc;QACZ,0BAA0B;QAC1B,IAAI,CAAC,iBAAiB,GAAG,IAAI,iBAAiB,EAAE,CAAC;QACjD,IAAI,CAAC,aAAa,GAAG,IAAI,aAAa,EAAE,CAAC;QACzC,mBAAmB;QACnB,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,EACpC,IAAI,CAAC,WAAW,CAAC,CAAC;QACpB,2BAA2B;QAC3B,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,MAAM;YACrC,EAAE,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC;gBAAC,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAA;YACxD,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC/B,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;gBAC3B,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACrC,CAAC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAC,QAAgB,EAAE,UAAkB;YAC3E,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,CAAC,QAAgB,EAAE,UAAkB;YAC9E,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAA;IACJ,CAAC;IAED,aAAa;QACX,sBAAsB;QACtB,IAAI,CAAC,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC;QACrC,qBAAqB;QACrB,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC;YACnC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAA;QAC5B,CAAC,CAAC,CAAA;QACF,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACtB,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,mBAAmB,EAAE,CAAC;YAClD,IAAI,WAAW,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;YACnC,IAAI,GAAG,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC;gBACpC,WAAW;gBACX,mBAAmB;aACpB,CAAC,CAAA;YACF,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACR,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACpC,CAAC;QACH,CAAC,CAAA,CAAC,CAAA;QACF,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;YACvB,IAAI,IAAI,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;YAC1C,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACT,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;gBACjC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBAC9B,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACjC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACpC,CAAC;QACH,CAAC,CAAA,CAAC,CAAA;QACF,YAAY;QACZ,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAA;QACzC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA;QACnC,uBAAuB;QACvB,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAA;IAClF,CAAC;IAED,eAAe;QACb,wBAAwB;QACxB,IAAI,CAAC,SAAS,GAAG,IAAI,SAAS,EAAE,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAA;QACF,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;YACvB,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAA;QACF,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;YACzB,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAA;QACF,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;YACzB,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAA;QACF,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;YACxB,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;QAC9B,CAAC,CAAC,CAAA;QACF,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,UAAU;YAC3C,0DAA0D;YAC1D,IAAI,QAAQ,GAAG;gBACb,WAAW,EAAE,UAAU;gBACvB,aAAa,EAAE,CAAC;aACjB,CAAA;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;YACnC,CAAC;YACD,MAAM,CAAC,IAAI;iBACR,SAAS;iBACT,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC;iBACxB,IAAI,CAAC,CAAC,UAAe;gBACpB,IAAI,KAAK,GAAG,CAAC,CAAC,UAAU,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,UAAU,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;gBACtD,IAAI,CAAC,iBAAiB,GAAG,UAAU,CAAC,eAAe,CAAC,KAAK,CAAC,CAAA;gBAC1D,UAAU,CAAC,cAAc,CAAC,IAAI,CAAC,iBAAiB,EAAE;oBAChD,IAAI,EAAE,MAAM;oBACZ,KAAK,EAAE,iBAAiB;iBACzB,CAAC,CAAA;YACJ,CAAC,CAAC,CAAA;QACN,CAAC,CAAC,CAAA;IACJ,CAAC;IAED,QAAQ,CAAE,KAAU;QAElB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,kBAAkB;QAClB,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,CAAC,CAAC,MAAM;YAC7C,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;gBACrD,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,MAAM,CAAC,CAAA;YAC9C,CAAC;QACH,CAAC,CAAC,CAAA;QACF,4FAA4F;QAC5F,kDAAkD;QAClD,+DAA+D;QAC/D,2CAA2C;QAC3C,2CAA2C;QAC3C,yCAAyC;QACzC,OAAO;IACT,CAAC;IAED,kBAAkB;QAChB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAED,UAAU;QACR,gCAAgC;QAChC,iBAAiB;QACjB,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QAC1B,iBAAiB;QACjB,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;QAC3B,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;CACF,CAAC","sourcesContent":["'use babel';\n/*!\n * Atom Bugs\n * Copyright(c) 2017 Williams Medina <williams.medinaa@gmail.com>\n * MIT Licensed\n */\nimport {\n  ToolbarView,\n  DebugView\n} from './ui/index';\n\nimport { PluginManager } from './PluginManager'\nimport { BreakpointManager } from './BreakpointManager'\nimport { Client } from './Client'\n\nconst { CompositeDisposable } = require('atom');\n\nexport default {\n\n  subscriptions: null,\n  breakpointManager: null,\n  pluginManager: null,\n  activePlugin: null,\n  activeBreakMarker: null,\n\n  toolbarView: null,\n  schemeView: null,\n  debugView: null,\n\n  toolbarPanel: null,\n  debugPanel: null,\n\n  createPanels () {\n    // Toolbar Panel\n    this.toolbarPanel = atom.workspace.addTopPanel({\n      item: this.toolbarView.getElement(),\n      visible: true\n    });\n    // Debug Area Panel\n    this.debugPanel = atom.workspace.addTopPanel({\n      item: this.debugView.getElement(),\n      visible: true\n    });\n  },\n\n  createManagers () {\n    // Create manager intances\n    this.breakpointManager = new BreakpointManager();\n    this.pluginManager = new PluginManager();\n    // Atom Bugs Client\n    let client = new Client(this.debugView,\n      this.toolbarView);\n    // Activate Selected Plugin\n    this.pluginManager.didAddPlugin((plugin) => {\n      if (plugin.registerClient) plugin.registerClient(client)\n      if (this.activePlugin === null) {\n        this.activePlugin = plugin;\n        this.toolbarView.setScheme(plugin);\n      }\n    });\n    this.breakpointManager.didAddBreakpoint((filePath: string, fileNumber: number) => {\n      this.activePlugin.addBreakpoint(filePath, fileNumber);\n    });\n    this.breakpointManager.didRemoveBreakpoint((filePath: string, fileNumber: number) => {\n      this.activePlugin.removeBreakpoint(filePath, fileNumber);\n    })\n  },\n\n  createToolbar () {\n    // Create Toolbar View\n    this.toolbarView = new ToolbarView();\n    // Open Scheme Editor\n    this.toolbarView.didOpenSchemeEditor(() => {\n      console.log('open editor')\n    })\n    this.toolbarView.didRun(async () => {\n      let editor = atom.workspace.getActiveTextEditor();\n      let currentFile = editor.getPath();\n      let run = await this.activePlugin.run({\n        currentFile\n        // other setup here\n      })\n      if (run) {\n        this.toolbarView.toggleRun(false);\n      }\n    })\n    this.toolbarView.didStop(async () => {\n      let stop = await this.activePlugin.stop();\n      if (stop) {\n        this.activeBreakMarker.destroy();\n        this.activeBreakMarker = null;\n        this.toolbarView.toggleRun(true);\n        this.debugView.togglePause(false);\n      }\n    })\n    // set Paths\n    let projects = atom.project['getPaths']()\n    this.toolbarView.setPaths(projects)\n    // observe path changes\n    atom.project.onDidChangePaths((projects) => this.toolbarView.setPaths(projects))\n  },\n\n  createDebugArea () {\n    // Create view instances\n    this.debugView = new DebugView();\n    this.debugView.didPause(() => {\n      this.activePlugin.pause();\n    })\n    this.debugView.didResume(() => {\n      this.activePlugin.resume();\n    })\n    this.debugView.didStepOver(() => {\n      this.activePlugin.stepOver();\n    })\n    this.debugView.didStepInto(() => {\n      this.activePlugin.stepInto();\n    })\n    this.debugView.didStepOut(() => {\n      this.activePlugin.stepOut();\n    })\n    this.debugView.didBreak((filePath, lineNumber) => {\n      // /[^(?:<> \\n)]+\\/[a-zA-Z0-9_ \\-\\/\\-\\.\\*\\+]+(:[0-9:]+)?/g\n      let position = {\n        initialLine: lineNumber,\n        initialColumn: 0\n      }\n      if (this.activeBreakMarker) {\n        this.activeBreakMarker.destroy();\n      }\n      return atom\n        .workspace\n        .open(filePath, position)\n        .then((textEditor: any) => {\n          let range = [[lineNumber - 1, 0], [lineNumber - 1, 0]]\n          this.activeBreakMarker = textEditor.markBufferRange(range)\n          textEditor.decorateMarker(this.activeBreakMarker, {\n            type: 'line',\n            class: 'bugs-break-line'\n          })\n        })\n    })\n  },\n\n  activate (state: any) {\n\n    this.createToolbar();\n    this.createDebugArea();\n    this.createManagers();\n    this.createPanels();\n    // observe editors\n    atom.workspace['observeActivePaneItem']((editor) => {\n      if (editor && editor.getPath && editor.editorElement) {\n        this.breakpointManager.observeEditor(editor)\n      }\n    })\n    // Events subscribed to in atom's system can be easily cleaned up with a CompositeDisposable\n    // this.subscriptions = new CompositeDisposable();\n    // this.subscriptions.add(atom.commands.add('atom-workspace', {\n    //   'atom-bugs:debug': () => this.debug(),\n    //   'atom-bugs:pause': () => this.debug(),\n    //   'atom-bugs:stop': () => this.debug()\n    // }));\n  },\n\n  provideBugsService () {\n    return this.pluginManager;\n  },\n\n  deactivate () {\n    // this.subscriptions.dispose();\n    // destroy panels\n    this.toolbarPanel.destroy();\n    this.debugPanel.destroy();\n    // destroys views\n    this.toolbarView.destroy();\n    this.debugView.destroy();\n  }\n};\n"]}