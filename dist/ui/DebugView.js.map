{"version":3,"file":"DebugView.js","sourceRoot":"","sources":["../../lib/ui/DebugView.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel';\n/*!\n * Atom Bugs\n * Copyright(c) 2017 Williams Medina <williams.medinaa@gmail.com>\n * MIT Licensed\n */\n\nimport {\n  createGroupButtons,\n  createButton,\n  createIcon,\n  createIconFromPath,\n  createText,\n  createElement,\n  insertElement\n} from '../element/index';\nimport { EventEmitter }  from 'events';\n\nexport class DebugView {\n\n  private element: HTMLElement;\n  private consoleElement: HTMLElement;\n  private debugAreaElement: HTMLElement;\n\n  private pauseButton: HTMLElement;\n  private resumeButton: HTMLElement;\n  private events: EventEmitter;\n\n  constructor () {\n\n    this.events = new EventEmitter();\n    this.element = document.createElement('atom-bugs-debug');\n    this.consoleElement = createElement('atom-bugs-console');\n    this.consoleElement.setAttribute('tabindex', '-1');\n\n    this.pauseButton = createButton({\n      click: () => {\n        this.events.emit('didPause')\n      }\n    }, [createIcon('pause'), createText('Pause')])\n    this.resumeButton = createButton({\n      click: () => {\n        this.events.emit('didResume')\n      }\n    }, [createIcon('resume'), createText('Resume')])\n\n    this.togglePause(false);\n\n    this.debugAreaElement = createElement('atom-bugs-area');\n    insertElement(this.debugAreaElement, [\n      createElement('atom-bugs-controls', {\n        elements: [\n          this.pauseButton,\n          this.resumeButton,\n          createButton({\n            click: () => {\n              this.events.emit('didStepOver')\n            }\n          }, [createIcon('step-over')]),\n          createButton({\n            click: () => {\n              this.events.emit('didStepInto')\n            }\n          }, [createIcon('step-into')]),\n          createButton({\n            click: () => {\n              this.events.emit('didStepOut')\n            }\n          }, [createIcon('step-out')])\n        ]\n      }),\n      createElement('atom-bugs-control-group', {\n        elements: [\n          createElement('atom-bugs-control-title', {\n            elements: [createText('Breakpoints')]\n          }),\n          createElement('atom-bugs-control-content', {\n            elements: [createText('Some Content')]\n          })\n        ]\n      })\n    ])\n    insertElement(this.element, this.debugAreaElement)\n    insertElement(this.element, this.consoleElement)\n  }\n\n  public didResume (callback) {\n    this.events.on('didResume', callback)\n  }\n\n  public didPause (callback) {\n    this.events.on('didPause', callback)\n  }\n  public didStepOver (callback) {\n    this.events.on('didStepOver', callback)\n  }\n  public didStepInto (callback) {\n    this.events.on('didStepInto', callback)\n  }\n  public didStepOut (callback) {\n    this.events.on('didStepOut', callback)\n  }\n\n  togglePause (status: boolean) {\n    this.resumeButton.style.display = status ? null : 'none';\n    this.pauseButton.style.display = status ? 'none' : null;\n  }\n  setPausedScript (filePath: string, lineNumber: number) {\n    this.consoleCreateLine('', [\n      createText('Pause on'),\n      createText(`${filePath}:${lineNumber}`)\n    ])\n  }\n  consoleClear () {\n    this.consoleElement.innerHTML = '';\n  }\n  consoleCreateLine (entry: string, elements?) {\n    let line = createElement('atom-bugs-console-line');\n    if (entry && entry.length > 0) {\n      line.innerHTML = entry;\n    }\n    if (elements) {\n      insertElement(line, elements)\n    }\n    setTimeout (() => {\n      this.consoleElement.scrollTop = this.consoleElement.scrollHeight;\n    }, 250);\n    return insertElement(this.consoleElement, line);\n  }\n  getElement () {\n    return this.element;\n  }\n  destroy () {\n    this.element.remove();\n  }\n}\n"]}