{"version":3,"file":"EditorView.js","sourceRoot":"","sources":["../../lib/ui/EditorView.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel';\n/*!\n * Atom Bugs\n * Copyright(c) 2017 Williams Medina <williams.medinaa@gmail.com>\n * MIT Licensed\n */\nimport {\n createIcon,\n createText,\n createButton,\n createElement,\n insertElement\n} from '../element/index';\nimport { BreakpointManager } from '../BreakpointManager';\nimport { EventEmitter }  from 'events';\n\nexport class EditorView {\n\n  private currentEditor: any;\n  private currentBreakMarker: any;\n  private currentExpressionMarker: any;\n  private currentEvaluationMarker: any;\n  private breakpointHandler: Function;\n  private expressionHandler: Function;\n  private evaluateHandler: any;\n  private events: EventEmitter;\n\n  constructor (private breakpointManager: BreakpointManager) {\n    this.events = new EventEmitter();\n    this.breakpointHandler = this.breakpointListener.bind(this);\n    this.expressionHandler = this.expressionListener.bind(this);\n  }\n\n  destroy () {\n    this.currentBreakMarker = null;\n    this.currentExpressionMarker = null;\n    this.currentEvaluationMarker = null;\n    this.removeMarkers();\n  }\n\n  didEvaluateExpression (cb: Function) {\n    this.events.on('evaluateExpression', cb);\n  }\n\n  didRequestProperties (cb: Function) {\n    this.events.on('requestProperties', cb);\n  }\n\n  createBreakMarker (editor, lineNumber: number) {\n    this.removeBreakMarker();\n    let range = [[lineNumber - 1, 0], [lineNumber - 1, 0]];\n    this.currentBreakMarker = editor.markBufferRange(range);\n    editor.decorateMarker(this.currentBreakMarker, {\n      type: 'line',\n      class: 'bugs-break-line'\n    })\n  }\n\n  removeMarkers () {\n    this.removeBreakMarker();\n    this.removeExpressionMarker();\n    this.removeEvaluationMarker();\n  }\n\n  removeBreakMarker () {\n    if (this.currentBreakMarker) {\n      this.currentBreakMarker.destroy();\n    }\n  }\n\n  removeExpressionMarker () {\n    if (this.currentExpressionMarker) {\n      this.currentExpressionMarker.destroy();\n    }\n  }\n\n  addFeatures (editor) {\n    // Observe active editor\n    atom.workspace['observeActivePaneItem']((editor) => {\n      if (this.currentEditor && this.currentEditor.editorElement) {\n        // remove breakpoint handler\n        this.currentEditor.editorElement.removeEventListener('click', this.breakpointHandler);\n        this.currentEditor.editorElement.removeEventListener('mousemove', this.expressionHandler);\n        // remove expression evaluator\n      }\n      if (editor && editor.getPath && editor.editorElement) {\n        this.currentEditor = editor;\n        // add breakpoint handler\n        this.currentEditor.editorElement.addEventListener('click', this.breakpointHandler)\n        this.currentEditor.editorElement.addEventListener('mousemove', this.expressionHandler);\n      }\n    })\n  }\n\n  private breakpointListener (e: MouseEvent) {\n    let element = e.target as HTMLElement;\n    if (element.classList.contains('line-number')) {\n      // toggle breakpoints\n      let sourceFile = this.currentEditor.getPath();\n      let lineNumber = Number(element.textContent)\n      let exists = this.breakpointManager.getBreakpoint(sourceFile, lineNumber)\n      if (exists) {\n        this.breakpointManager.removeBreakpoint(exists);\n      } else {\n        let range = [[lineNumber - 1, 0], [lineNumber - 1, 0]]\n        let marker = this.currentEditor.markBufferRange(range)\n        let decorator = this.currentEditor.decorateMarker(marker, {\n          type: 'line-number',\n          class: 'bugs-breakpoint'\n        })\n        this.breakpointManager.addBreakpoint(marker, lineNumber, sourceFile)\n      }\n    }\n  }\n\n  private getPositionFromEvent (e: MouseEvent) {\n    let lines = this.currentEditor.editorElement.querySelector('.lines');\n    var clientX = e.clientX;\n    var clientY = e.clientY;\n    let clientRect = lines.getBoundingClientRect();\n    let screenPosition = this.currentEditor.screenPositionForPixelPosition({\n      top: (clientY - clientRect.top) + this.currentEditor.editorElement.getScrollTop(),\n      left: (clientX - clientRect.left) + this.currentEditor.editorElement.getScrollLeft()\n    });\n    return this.currentEditor.bufferPositionForScreenPosition(screenPosition);\n  }\n\n  private getWordRangeFromPosition (position) {\n    let prevRow = this.currentEditor.buffer.previousNonBlankRow(position.row);\n    let endRow = this.currentEditor.buffer.nextNonBlankRow(position.row);\n    if (!endRow) {\n      endRow = position.row;\n    }\n    let startWord = position;\n    let endWord = position;\n    this.currentEditor.scanInBufferRange(/[ \\,\\{\\}\\(\\;\\)\\[\\]^\\n]+/gm, [[prevRow, 0], position], (s) => {\n      if (s.matchText) {\n        startWord = s.range.end;\n      }\n    })\n    this.currentEditor.scanInBufferRange(/[ \\,\\{\\}\\(\\.\\;\\)\\[\\]\\n]+/g, [position, [endRow, 50]], (s) => {\n      if (s.matchText) {\n        endWord = s.range.start;\n        s.stop();\n      }\n    })\n    return [startWord, endWord];\n  }\n\n  private  expressionListener (e: MouseEvent) {\n    let sourceFile = this.currentEditor.getPath();\n    let bufferPosition = this.getPositionFromEvent(e);\n    let scanRange = this.getWordRangeFromPosition(bufferPosition);\n    let expression = this.currentEditor.getTextInBufferRange(scanRange);\n    clearTimeout(this.evaluateHandler)\n    this.evaluateHandler = setTimeout(() => {\n      if (expression && String(expression).trim().length > 0) {\n        this.events.emit('evaluateExpression', expression, scanRange);\n      }\n    }, 250);\n  }\n  createInspectorForElement (element: HTMLElement, result: any, load?: boolean) {\n    // value\n    if (result.value) {\n      console.log('value', result);\n      insertElement(element, [createText(result.value)]);\n    }\n    // object\n    if (result.objectId) {\n      let loadProperties = () => {\n        this.events.emit('requestProperties', result, {\n          insertFromDescription: (descriptions: Array<any>) => {\n            descriptions.forEach((desc) => {\n              if (desc.value) {\n                let valueElement = createElement('span', {\n                  className: 'property-value'\n                });\n                let itemElement = insertElement(element, [\n                  createElement('atom-bugs-inspector-item', {\n                    elements: [\n                      createIcon(''),\n                      createElement('span', {\n                        className: 'property-name',\n                        elements: [ createText(desc.name) ]\n                      }),\n                      valueElement\n                    ]\n                  })\n                ]);\n                this.createInspectorForElement(valueElement, desc.value, false);\n              }\n            });\n          }\n        })\n      }\n      if (load === true) {\n        loadProperties();\n      } else {\n        // get parent\n        let icon = element.parentElement.querySelector('.bugs-icon');\n        if (icon) {\n          icon.classList.add('bugs-icon-indicate');\n          icon.addEventListener('click', () => {\n            // toggle\n            loadProperties();\n          })\n        }\n      }\n    }\n  }\n  createInspectorOverlay (result: any) {\n    let element = createElement('atom-bugs-overlay', {\n      className: 'native-key-bindings'\n    });\n    let inspectorElement = createElement('atom-bugs-inspector');\n    element.setAttribute('tabindex', '-1');\n    inspectorElement.addEventListener('mousewheel', (e) => {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    });\n    this.createInspectorForElement(inspectorElement, result, true);\n    return insertElement(element, [\n      createElement('atom-bugs-overlay-header', {\n        elements: [ createText(result.className || result.type) ]\n      }),\n      inspectorElement\n    ]);\n  }\n  addEvaluationMarker (result: any, range) {\n    // highlight expression\n    this.removeExpressionMarker();\n    this.currentExpressionMarker = this.currentEditor.markBufferRange(range)\n    this.currentEditor.decorateMarker(this.currentExpressionMarker, {\n      type: 'highlight',\n      class: 'bugs-expression'\n    })\n    // overlay inspector\n    this.removeEvaluationMarker();\n    let element = this.createInspectorOverlay(result);\n    this.currentEvaluationMarker = this.currentEditor.markBufferRange(range);\n    this.currentEditor.decorateMarker(this.currentEvaluationMarker, {\n      type: 'overlay',\n      class: 'bugs-expression-overlay',\n      item: element\n    });\n    setTimeout(() => {\n      element.parentElement.addEventListener('mousemove', (e) => {\n        e.stopPropagation();\n      });\n      // element.parentElement.addEventListener('mouseout', () => {\n      //   this.removeEvaluationMarker();\n      // });\n    }, 100);\n  }\n  removeEvaluationMarker () {\n    if (this.currentEvaluationMarker) {\n      this.currentEvaluationMarker.destroy();\n    }\n  }\n}\n"]}